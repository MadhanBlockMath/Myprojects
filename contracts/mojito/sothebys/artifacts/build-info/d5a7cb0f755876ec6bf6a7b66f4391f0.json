{
	"id": "d5a7cb0f755876ec6bf6a7b66f4391f0",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/mojito/sothebys/RoyaltyEngine.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.0;\n\nimport {ICreatorCore} from \"../../manifold/creator-core/core/ICreatorCore.sol\";\nimport {IERC165} from \"../../openzeppelin/utils/introspection/IERC165.sol\";\nimport {IRoyaltyEngine} from \"../interfaces/IRoyaltyEngine.sol\";\n\ncontract RoyaltyEngine is IRoyaltyEngine {\n\n    bytes4 private constant ROYALTIES_CREATORCORE_INTERFACE_ID = 0xbb3bafd6;\n    bytes4 private constant _INTERFACE_ID_ROYALTIES_EIP2981 = 0x2a55205a;\n    bytes4 private constant _INTERFACE_ID_ROYALTIES_RARIBLE = 0xb7799584;\n    bytes4 private constant _INTERFACE_ID_ROYALTIES_FOUNDATION = 0xd5a06d4c;\n\n    /// @notice Get the Royalty Fee details for the tokenID\n    /// @param tokenContract The NFT Contract address\n    /// @param tokenId The NFT tokenId\n    function getRoyalty(\n        address tokenContract,\n        uint256 tokenId\n    )\n        external\n        view\n        override\n        returns (\n            address payable[] memory recipients,\n            uint256[] memory bps // Royalty amount denominated in basis points\n        )\n    {\n        if (\n            IERC165(tokenContract).supportsInterface(\n                ROYALTIES_CREATORCORE_INTERFACE_ID\n            )\n        ) {\n            (recipients, bps) = ICreatorCore(tokenContract).getRoyalties(\n                tokenId\n            );\n        } else if (\n            IERC165(tokenContract).supportsInterface(\n                _INTERFACE_ID_ROYALTIES_RARIBLE\n            )\n        ) {\n            recipients = ICreatorCore(tokenContract).getFeeRecipients(tokenId);\n            bps = ICreatorCore(tokenContract).getFeeBps(tokenId);\n        } else if (\n            IERC165(tokenContract).supportsInterface(\n                _INTERFACE_ID_ROYALTIES_FOUNDATION\n            )\n        ) {\n            (recipients, bps) = ICreatorCore(tokenContract).getFees(tokenId);\n        } \n    }\n}"
			},
			"contracts/mojito/interfaces/IRoyaltyEngine.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity ^0.8.0;\npragma experimental ABIEncoderV2;\n\n/**\n * @title Interface for RoyaltyEngine\n */\ninterface IRoyaltyEngine {\n\n    function getRoyalty(address collectionAddress, uint256 tokenId)\n        external\n        view\n        returns (address payable[] memory recipients, uint256[] memory bps);\n\n}\n"
			},
			"contracts/openzeppelin/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"contracts/manifold/creator-core/core/ICreatorCore.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/// @author: manifold.xyz\n\nimport \"../../../openzeppelin/utils/introspection/IERC165.sol\";\n\n/**\n * @dev Core creator interface\n */\ninterface ICreatorCore is IERC165 {\n    event ExtensionRegistered(\n        address indexed extension,\n        address indexed sender\n    );\n    event ExtensionUnregistered(\n        address indexed extension,\n        address indexed sender\n    );\n    event ExtensionBlacklisted(\n        address indexed extension,\n        address indexed sender\n    );\n    event MintPermissionsUpdated(\n        address indexed extension,\n        address indexed permissions,\n        address indexed sender\n    );\n    event RoyaltiesUpdated(\n        uint256 indexed tokenId,\n        address payable[] receivers,\n        uint256[] basisPoints\n    );\n    event DefaultRoyaltiesUpdated(\n        address payable[] receivers,\n        uint256[] basisPoints\n    );\n    event ExtensionRoyaltiesUpdated(\n        address indexed extension,\n        address payable[] receivers,\n        uint256[] basisPoints\n    );\n    event ExtensionApproveTransferUpdated(\n        address indexed extension,\n        bool enabled\n    );\n\n    /**\n     * @dev gets address of all extensions\n     */\n    function getExtensions() external view returns (address[] memory);\n\n    /**\n     * @dev add an extension.  Can only be called by contract owner or admin.\n     * extension address must point to a contract implementing ICreatorExtension.\n     * Returns True if newly added, False if already added.\n     */\n    function registerExtension(address extension, string calldata baseURI)\n        external;\n\n    /**\n     * @dev add an extension.  Can only be called by contract owner or admin.\n     * extension address must point to a contract implementing ICreatorExtension.\n     * Returns True if newly added, False if already added.\n     */\n    function registerExtension(\n        address extension,\n        string calldata baseURI,\n        bool baseURIIdentical\n    ) external;\n\n    /**\n     * @dev add an extension.  Can only be called by contract owner or admin.\n     * Returns True if removed, False if already removed.\n     */\n    function unregisterExtension(address extension) external;\n\n    /**\n     * @dev blacklist an extension.  Can only be called by contract owner or admin.\n     * This function will destroy all ability to reference the metadata of any tokens created\n     * by the specified extension. It will also unregister the extension if needed.\n     * Returns True if removed, False if already removed.\n     */\n    function blacklistExtension(address extension) external;\n\n    /**\n     * @dev set the baseTokenURI of an extension.  Can only be called by extension.\n     */\n    function setBaseTokenURIExtension(string calldata uri) external;\n\n    /**\n     * @dev set the baseTokenURI of an extension.  Can only be called by extension.\n     * For tokens with no uri configured, tokenURI will return \"uri+tokenId\"\n     */\n    function setBaseTokenURIExtension(string calldata uri, bool identical)\n        external;\n\n    /**\n     * @dev set the common prefix of an extension.  Can only be called by extension.\n     * If configured, and a token has a uri set, tokenURI will return \"prefixURI+tokenURI\"\n     * Useful if you want to use ipfs/arweave\n     */\n    function setTokenURIPrefixExtension(string calldata prefix) external;\n\n    /**\n     * @dev set the tokenURI of a token extension.  Can only be called by extension that minted token.\n     */\n    function setTokenURIExtension(uint256 tokenId, string calldata uri)\n        external;\n\n    /**\n     * @dev set the tokenURI of a token extension for multiple tokens.  Can only be called by extension that minted token.\n     */\n    function setTokenURIExtension(\n        uint256[] memory tokenId,\n        string[] calldata uri\n    ) external;\n\n    /**\n     * @dev set the baseTokenURI for tokens with no extension.  Can only be called by owner/admin.\n     * For tokens with no uri configured, tokenURI will return \"uri+tokenId\"\n     */\n    function setBaseTokenURI(string calldata uri) external;\n\n    /**\n     * @dev set the common prefix for tokens with no extension.  Can only be called by owner/admin.\n     * If configured, and a token has a uri set, tokenURI will return \"prefixURI+tokenURI\"\n     * Useful if you want to use ipfs/arweave\n     */\n    function setTokenURIPrefix(string calldata prefix) external;\n\n    /**\n     * @dev set the tokenURI of a token with no extension.  Can only be called by owner/admin.\n     */\n    function setTokenURI(uint256 tokenId, string calldata uri) external;\n\n    /**\n     * @dev set the tokenURI of multiple tokens with no extension.  Can only be called by owner/admin.\n     */\n    function setTokenURI(uint256[] memory tokenIds, string[] calldata uris)\n        external;\n\n    /**\n     * @dev set a permissions contract for an extension.  Used to control minting.\n     */\n    function setMintPermissions(address extension, address permissions)\n        external;\n\n    /**\n     * @dev Configure so transfers of tokens created by the caller (must be extension) gets approval\n     * from the extension before transferring\n     */\n    function setApproveTransferExtension(bool enabled) external;\n\n    /**\n     * @dev get the extension of a given token\n     */\n    function tokenExtension(uint256 tokenId) external view returns (address);\n\n    /**\n     * @dev Set default royalties\n     */\n    function setRoyalties(\n        address payable[] calldata receivers,\n        uint256[] calldata basisPoints\n    ) external;\n\n    /**\n     * @dev Set royalties of a token\n     */\n    function setRoyalties(\n        uint256 tokenId,\n        address payable[] calldata receivers,\n        uint256[] calldata basisPoints\n    ) external;\n\n    /**\n     * @dev Set royalties of an extension\n     */\n    function setRoyaltiesExtension(\n        address extension,\n        address payable[] calldata receivers,\n        uint256[] calldata basisPoints\n    ) external;\n\n    /**\n     * @dev Get royalites of a token.  Returns list of receivers and basisPoints\n     */\n    function getRoyalties(uint256 tokenId)\n        external\n        view\n        returns (address payable[] memory, uint256[] memory);\n\n    // Royalty support for various other standards\n    function getFeeRecipients(uint256 tokenId)\n        external\n        view\n        returns (address payable[] memory);\n\n    function getFeeBps(uint256 tokenId)\n        external\n        view\n        returns (uint256[] memory);\n\n    function getFees(uint256 tokenId)\n        external\n        view\n        returns (address payable[] memory, uint256[] memory);\n\n    function royaltyInfo(uint256 tokenId, uint256 value)\n        external\n        view\n        returns (address , uint256);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 125
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/manifold/creator-core/core/ICreatorCore.sol": {
				"ICreatorCore": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address payable[]",
									"name": "receivers",
									"type": "address[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "basisPoints",
									"type": "uint256[]"
								}
							],
							"name": "DefaultRoyaltiesUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "extension",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "enabled",
									"type": "bool"
								}
							],
							"name": "ExtensionApproveTransferUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "extension",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ExtensionBlacklisted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "extension",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ExtensionRegistered",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "extension",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address payable[]",
									"name": "receivers",
									"type": "address[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "basisPoints",
									"type": "uint256[]"
								}
							],
							"name": "ExtensionRoyaltiesUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "extension",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ExtensionUnregistered",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "extension",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "permissions",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "MintPermissionsUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address payable[]",
									"name": "receivers",
									"type": "address[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "basisPoints",
									"type": "uint256[]"
								}
							],
							"name": "RoyaltiesUpdated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "extension",
									"type": "address"
								}
							],
							"name": "blacklistExtension",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getExtensions",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getFeeBps",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getFeeRecipients",
							"outputs": [
								{
									"internalType": "address payable[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getFees",
							"outputs": [
								{
									"internalType": "address payable[]",
									"name": "",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getRoyalties",
							"outputs": [
								{
									"internalType": "address payable[]",
									"name": "",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "extension",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "baseURI",
									"type": "string"
								}
							],
							"name": "registerExtension",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "extension",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "baseURI",
									"type": "string"
								},
								{
									"internalType": "bool",
									"name": "baseURIIdentical",
									"type": "bool"
								}
							],
							"name": "registerExtension",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "royaltyInfo",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "enabled",
									"type": "bool"
								}
							],
							"name": "setApproveTransferExtension",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "setBaseTokenURI",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "setBaseTokenURIExtension",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "uri",
									"type": "string"
								},
								{
									"internalType": "bool",
									"name": "identical",
									"type": "bool"
								}
							],
							"name": "setBaseTokenURIExtension",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "extension",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "permissions",
									"type": "address"
								}
							],
							"name": "setMintPermissions",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address payable[]",
									"name": "receivers",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "basisPoints",
									"type": "uint256[]"
								}
							],
							"name": "setRoyalties",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable[]",
									"name": "receivers",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "basisPoints",
									"type": "uint256[]"
								}
							],
							"name": "setRoyalties",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "extension",
									"type": "address"
								},
								{
									"internalType": "address payable[]",
									"name": "receivers",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "basisPoints",
									"type": "uint256[]"
								}
							],
							"name": "setRoyaltiesExtension",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "setTokenURI",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "tokenIds",
									"type": "uint256[]"
								},
								{
									"internalType": "string[]",
									"name": "uris",
									"type": "string[]"
								}
							],
							"name": "setTokenURI",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "tokenId",
									"type": "uint256[]"
								},
								{
									"internalType": "string[]",
									"name": "uri",
									"type": "string[]"
								}
							],
							"name": "setTokenURIExtension",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "setTokenURIExtension",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "prefix",
									"type": "string"
								}
							],
							"name": "setTokenURIPrefix",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "prefix",
									"type": "string"
								}
							],
							"name": "setTokenURIPrefixExtension",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenExtension",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "extension",
									"type": "address"
								}
							],
							"name": "unregisterExtension",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Core creator interface",
						"kind": "dev",
						"methods": {
							"blacklistExtension(address)": {
								"details": "blacklist an extension.  Can only be called by contract owner or admin. This function will destroy all ability to reference the metadata of any tokens created by the specified extension. It will also unregister the extension if needed. Returns True if removed, False if already removed."
							},
							"getExtensions()": {
								"details": "gets address of all extensions"
							},
							"getRoyalties(uint256)": {
								"details": "Get royalites of a token.  Returns list of receivers and basisPoints"
							},
							"registerExtension(address,string)": {
								"details": "add an extension.  Can only be called by contract owner or admin. extension address must point to a contract implementing ICreatorExtension. Returns True if newly added, False if already added."
							},
							"registerExtension(address,string,bool)": {
								"details": "add an extension.  Can only be called by contract owner or admin. extension address must point to a contract implementing ICreatorExtension. Returns True if newly added, False if already added."
							},
							"setApproveTransferExtension(bool)": {
								"details": "Configure so transfers of tokens created by the caller (must be extension) gets approval from the extension before transferring"
							},
							"setBaseTokenURI(string)": {
								"details": "set the baseTokenURI for tokens with no extension.  Can only be called by owner/admin. For tokens with no uri configured, tokenURI will return \"uri+tokenId\""
							},
							"setBaseTokenURIExtension(string)": {
								"details": "set the baseTokenURI of an extension.  Can only be called by extension."
							},
							"setBaseTokenURIExtension(string,bool)": {
								"details": "set the baseTokenURI of an extension.  Can only be called by extension. For tokens with no uri configured, tokenURI will return \"uri+tokenId\""
							},
							"setMintPermissions(address,address)": {
								"details": "set a permissions contract for an extension.  Used to control minting."
							},
							"setRoyalties(address[],uint256[])": {
								"details": "Set default royalties"
							},
							"setRoyalties(uint256,address[],uint256[])": {
								"details": "Set royalties of a token"
							},
							"setRoyaltiesExtension(address,address[],uint256[])": {
								"details": "Set royalties of an extension"
							},
							"setTokenURI(uint256,string)": {
								"details": "set the tokenURI of a token with no extension.  Can only be called by owner/admin."
							},
							"setTokenURI(uint256[],string[])": {
								"details": "set the tokenURI of multiple tokens with no extension.  Can only be called by owner/admin."
							},
							"setTokenURIExtension(uint256,string)": {
								"details": "set the tokenURI of a token extension.  Can only be called by extension that minted token."
							},
							"setTokenURIExtension(uint256[],string[])": {
								"details": "set the tokenURI of a token extension for multiple tokens.  Can only be called by extension that minted token."
							},
							"setTokenURIPrefix(string)": {
								"details": "set the common prefix for tokens with no extension.  Can only be called by owner/admin. If configured, and a token has a uri set, tokenURI will return \"prefixURI+tokenURI\" Useful if you want to use ipfs/arweave"
							},
							"setTokenURIPrefixExtension(string)": {
								"details": "set the common prefix of an extension.  Can only be called by extension. If configured, and a token has a uri set, tokenURI will return \"prefixURI+tokenURI\" Useful if you want to use ipfs/arweave"
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"tokenExtension(uint256)": {
								"details": "get the extension of a given token"
							},
							"unregisterExtension(address)": {
								"details": "add an extension.  Can only be called by contract owner or admin. Returns True if removed, False if already removed."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"blacklistExtension(address)": "02e7afb7",
							"getExtensions()": "83b7db63",
							"getFeeBps(uint256)": "0ebd4c7f",
							"getFeeRecipients(uint256)": "b9c4d9fb",
							"getFees(uint256)": "d5a06d4c",
							"getRoyalties(uint256)": "bb3bafd6",
							"registerExtension(address,string)": "3071a0f9",
							"registerExtension(address,string,bool)": "3f0f37f6",
							"royaltyInfo(uint256,uint256)": "2a55205a",
							"setApproveTransferExtension(bool)": "ac0c8cfa",
							"setBaseTokenURI(string)": "30176e13",
							"setBaseTokenURIExtension(string)": "3e6134b8",
							"setBaseTokenURIExtension(string,bool)": "82dcc0c8",
							"setMintPermissions(address,address)": "f0cdc499",
							"setRoyalties(address[],uint256[])": "332dd1ae",
							"setRoyalties(uint256,address[],uint256[])": "20e4afe2",
							"setRoyaltiesExtension(address,address[],uint256[])": "b0fe87c9",
							"setTokenURI(uint256,string)": "162094c4",
							"setTokenURI(uint256[],string[])": "aafb2d44",
							"setTokenURIExtension(uint256,string)": "e92a89f6",
							"setTokenURIExtension(uint256[],string[])": "61e5bc6b",
							"setTokenURIPrefix(string)": "99e0dd7c",
							"setTokenURIPrefixExtension(string)": "66d1e9d0",
							"supportsInterface(bytes4)": "01ffc9a7",
							"tokenExtension(uint256)": "239be317",
							"unregisterExtension(address)": "ce8aee9d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address payable[]\",\"name\":\"receivers\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"basisPoints\",\"type\":\"uint256[]\"}],\"name\":\"DefaultRoyaltiesUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"extension\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"ExtensionApproveTransferUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"extension\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ExtensionBlacklisted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"extension\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ExtensionRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"extension\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address payable[]\",\"name\":\"receivers\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"basisPoints\",\"type\":\"uint256[]\"}],\"name\":\"ExtensionRoyaltiesUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"extension\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ExtensionUnregistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"extension\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"permissions\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"MintPermissionsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address payable[]\",\"name\":\"receivers\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"basisPoints\",\"type\":\"uint256[]\"}],\"name\":\"RoyaltiesUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"extension\",\"type\":\"address\"}],\"name\":\"blacklistExtension\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getExtensions\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getFeeBps\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getFeeRecipients\",\"outputs\":[{\"internalType\":\"address payable[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getFees\",\"outputs\":[{\"internalType\":\"address payable[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getRoyalties\",\"outputs\":[{\"internalType\":\"address payable[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"extension\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"}],\"name\":\"registerExtension\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"extension\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"baseURIIdentical\",\"type\":\"bool\"}],\"name\":\"registerExtension\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"setApproveTransferExtension\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"setBaseTokenURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"setBaseTokenURIExtension\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"identical\",\"type\":\"bool\"}],\"name\":\"setBaseTokenURIExtension\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"extension\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"permissions\",\"type\":\"address\"}],\"name\":\"setMintPermissions\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address payable[]\",\"name\":\"receivers\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"basisPoints\",\"type\":\"uint256[]\"}],\"name\":\"setRoyalties\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable[]\",\"name\":\"receivers\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"basisPoints\",\"type\":\"uint256[]\"}],\"name\":\"setRoyalties\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"extension\",\"type\":\"address\"},{\"internalType\":\"address payable[]\",\"name\":\"receivers\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"basisPoints\",\"type\":\"uint256[]\"}],\"name\":\"setRoyaltiesExtension\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"setTokenURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"},{\"internalType\":\"string[]\",\"name\":\"uris\",\"type\":\"string[]\"}],\"name\":\"setTokenURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tokenId\",\"type\":\"uint256[]\"},{\"internalType\":\"string[]\",\"name\":\"uri\",\"type\":\"string[]\"}],\"name\":\"setTokenURIExtension\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"setTokenURIExtension\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"prefix\",\"type\":\"string\"}],\"name\":\"setTokenURIPrefix\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"prefix\",\"type\":\"string\"}],\"name\":\"setTokenURIPrefixExtension\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenExtension\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"extension\",\"type\":\"address\"}],\"name\":\"unregisterExtension\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Core creator interface\",\"kind\":\"dev\",\"methods\":{\"blacklistExtension(address)\":{\"details\":\"blacklist an extension.  Can only be called by contract owner or admin. This function will destroy all ability to reference the metadata of any tokens created by the specified extension. It will also unregister the extension if needed. Returns True if removed, False if already removed.\"},\"getExtensions()\":{\"details\":\"gets address of all extensions\"},\"getRoyalties(uint256)\":{\"details\":\"Get royalites of a token.  Returns list of receivers and basisPoints\"},\"registerExtension(address,string)\":{\"details\":\"add an extension.  Can only be called by contract owner or admin. extension address must point to a contract implementing ICreatorExtension. Returns True if newly added, False if already added.\"},\"registerExtension(address,string,bool)\":{\"details\":\"add an extension.  Can only be called by contract owner or admin. extension address must point to a contract implementing ICreatorExtension. Returns True if newly added, False if already added.\"},\"setApproveTransferExtension(bool)\":{\"details\":\"Configure so transfers of tokens created by the caller (must be extension) gets approval from the extension before transferring\"},\"setBaseTokenURI(string)\":{\"details\":\"set the baseTokenURI for tokens with no extension.  Can only be called by owner/admin. For tokens with no uri configured, tokenURI will return \\\"uri+tokenId\\\"\"},\"setBaseTokenURIExtension(string)\":{\"details\":\"set the baseTokenURI of an extension.  Can only be called by extension.\"},\"setBaseTokenURIExtension(string,bool)\":{\"details\":\"set the baseTokenURI of an extension.  Can only be called by extension. For tokens with no uri configured, tokenURI will return \\\"uri+tokenId\\\"\"},\"setMintPermissions(address,address)\":{\"details\":\"set a permissions contract for an extension.  Used to control minting.\"},\"setRoyalties(address[],uint256[])\":{\"details\":\"Set default royalties\"},\"setRoyalties(uint256,address[],uint256[])\":{\"details\":\"Set royalties of a token\"},\"setRoyaltiesExtension(address,address[],uint256[])\":{\"details\":\"Set royalties of an extension\"},\"setTokenURI(uint256,string)\":{\"details\":\"set the tokenURI of a token with no extension.  Can only be called by owner/admin.\"},\"setTokenURI(uint256[],string[])\":{\"details\":\"set the tokenURI of multiple tokens with no extension.  Can only be called by owner/admin.\"},\"setTokenURIExtension(uint256,string)\":{\"details\":\"set the tokenURI of a token extension.  Can only be called by extension that minted token.\"},\"setTokenURIExtension(uint256[],string[])\":{\"details\":\"set the tokenURI of a token extension for multiple tokens.  Can only be called by extension that minted token.\"},\"setTokenURIPrefix(string)\":{\"details\":\"set the common prefix for tokens with no extension.  Can only be called by owner/admin. If configured, and a token has a uri set, tokenURI will return \\\"prefixURI+tokenURI\\\" Useful if you want to use ipfs/arweave\"},\"setTokenURIPrefixExtension(string)\":{\"details\":\"set the common prefix of an extension.  Can only be called by extension. If configured, and a token has a uri set, tokenURI will return \\\"prefixURI+tokenURI\\\" Useful if you want to use ipfs/arweave\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"tokenExtension(uint256)\":{\"details\":\"get the extension of a given token\"},\"unregisterExtension(address)\":{\"details\":\"add an extension.  Can only be called by contract owner or admin. Returns True if removed, False if already removed.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/manifold/creator-core/core/ICreatorCore.sol\":\"ICreatorCore\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":125},\"remappings\":[]},\"sources\":{\"contracts/manifold/creator-core/core/ICreatorCore.sol\":{\"keccak256\":\"0x61a300259ca1484e05b04ece0acc97b9dbf5fbdd7b3d20a6892d8a1d3052362f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59981fee263486519a6e698f4f8ad5ee8af7c0668aee8bf335d285a06c3b02bb\",\"dweb:/ipfs/QmabGX8ERpimg3K8w5uSbVqdLXMo6fgizMmVyPPXazmJco\"]},\"contracts/openzeppelin/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x6aa521718bf139b44ce56f194f6aea1d590cacef995b5a84703fb1579fa49be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://100f8d367b5e94eb9cb991914f1de133cf272654c0708faa893bbc17a5b35b93\",\"dweb:/ipfs/QmZeBojmgXq821dL1TJKFb58B1FogM9jL3u7hXQ8hTEBKT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/mojito/interfaces/IRoyaltyEngine.sol": {
				"IRoyaltyEngine": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collectionAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getRoyalty",
							"outputs": [
								{
									"internalType": "address payable[]",
									"name": "recipients",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "bps",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "Interface for RoyaltyEngine",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoyalty(address,uint256)": "6e44a72f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collectionAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getRoyalty\",\"outputs\":[{\"internalType\":\"address payable[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"bps\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Interface for RoyaltyEngine\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mojito/interfaces/IRoyaltyEngine.sol\":\"IRoyaltyEngine\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":125},\"remappings\":[]},\"sources\":{\"contracts/mojito/interfaces/IRoyaltyEngine.sol\":{\"keccak256\":\"0x10b0c4526004a6c3572bbc4f60c4256bd99f64ec01deb8e6b9b22e5ae6e034b7\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b4dcd64bf92c6c9823469e0001f40cec8e48de2f8b0346218e4af27b04e039c7\",\"dweb:/ipfs/QmPUDiEYvesRGwK8Kv8uVJEnVd6P8itJCkUr9PKCPGTCq4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/mojito/sothebys/RoyaltyEngine.sol": {
				"RoyaltyEngine": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenContract",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getRoyalty",
							"outputs": [
								{
									"internalType": "address payable[]",
									"name": "recipients",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "bps",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"getRoyalty(address,uint256)": {
								"params": {
									"tokenContract": "The NFT Contract address",
									"tokenId": "The NFT tokenId"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/mojito/sothebys/RoyaltyEngine.sol\":283:1876  contract RoyaltyEngine is IRoyaltyEngine {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/mojito/sothebys/RoyaltyEngine.sol\":283:1876  contract RoyaltyEngine is IRoyaltyEngine {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6e44a72f\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/mojito/sothebys/RoyaltyEngine.sol\":787:1874  function getRoyalty(... */\n    tag_3:\n      tag_4\n      tag_5\n      calldatasize\n      0x04\n      tag_6\n      jump\t// in\n    tag_5:\n      tag_7\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_8\n      swap3\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_7:\n        /* \"contracts/mojito/sothebys/RoyaltyEngine.sol\":1103:1209  IERC165(tokenContract).supportsInterface(... */\n      mload(0x40)\n      shl(0xe0, 0x01ffc9a7)\n      dup2\n      mstore\n        /* \"contracts/mojito/sothebys/RoyaltyEngine.sol\":946:981  address payable[] memory recipients */\n      0x60\n      swap1\n      dup2\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/mojito/sothebys/RoyaltyEngine.sol\":1103:1143  IERC165(tokenContract).supportsInterface */\n      dup6\n      and\n      swap1\n      0x01ffc9a7\n      swap1\n        /* \"contracts/mojito/sothebys/RoyaltyEngine.sol\":1103:1209  IERC165(tokenContract).supportsInterface(... */\n      tag_11\n      swap1\n      shl(0xe1, 0x5d9dd7eb)\n        /* \"contracts/mojito/sothebys/RoyaltyEngine.sol\":1161:1195  ROYALTIES_CREATORCORE_INTERFACE_ID */\n      swap1\n        /* \"contracts/mojito/sothebys/RoyaltyEngine.sol\":1103:1209  IERC165(tokenContract).supportsInterface(... */\n      0x04\n      add\n      tag_12\n      jump\t// in\n    tag_11:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_14\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_14:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n        /* \"contracts/mojito/sothebys/RoyaltyEngine.sol\":1086:1867  if (... */\n      iszero\n      tag_17\n      jumpi\n        /* \"contracts/mojito/sothebys/RoyaltyEngine.sol\":1254:1333  ICreatorCore(tokenContract).getRoyalties(... */\n      mload(0x40)\n      shl(0xe1, 0x5d9dd7eb)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":2304:2329   */\n      dup5\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/mojito/sothebys/RoyaltyEngine.sol\":1254:1294  ICreatorCore(tokenContract).getRoyalties */\n      dup6\n      and\n      swap1\n      0xbb3bafd6\n      swap1\n        /* \"#utility.yul\":2277:2295   */\n      0x24\n      add\n        /* \"contracts/mojito/sothebys/RoyaltyEngine.sol\":1254:1333  ICreatorCore(tokenContract).getRoyalties(... */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_21\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_21:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      0x40\n      mstore\n      tag_22\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n        /* \"contracts/mojito/sothebys/RoyaltyEngine.sol\":1234:1333  (recipients, bps) = ICreatorCore(tokenContract).getRoyalties(... */\n      swap1\n      swap3\n      pop\n      swap1\n      pop\n        /* \"contracts/mojito/sothebys/RoyaltyEngine.sol\":1086:1867  if (... */\n      jump(tag_45)\n    tag_17:\n        /* \"contracts/mojito/sothebys/RoyaltyEngine.sol\":1367:1470  IERC165(tokenContract).supportsInterface(... */\n      mload(0x40)\n      shl(0xe0, 0x01ffc9a7)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/mojito/sothebys/RoyaltyEngine.sol\":1367:1407  IERC165(tokenContract).supportsInterface */\n      dup6\n      and\n      swap1\n      0x01ffc9a7\n      swap1\n        /* \"contracts/mojito/sothebys/RoyaltyEngine.sol\":1367:1470  IERC165(tokenContract).supportsInterface(... */\n      tag_25\n      swap1\n      shl(0xe2, 0x2dde6561)\n        /* \"contracts/mojito/sothebys/RoyaltyEngine.sol\":1425:1456  _INTERFACE_ID_ROYALTIES_RARIBLE */\n      swap1\n        /* \"contracts/mojito/sothebys/RoyaltyEngine.sol\":1367:1470  IERC165(tokenContract).supportsInterface(... */\n      0x04\n      add\n      tag_12\n      jump\t// in\n    tag_25:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_27\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_27:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_28:\n        /* \"contracts/mojito/sothebys/RoyaltyEngine.sol\":1350:1867  if (... */\n      iszero\n      tag_29\n      jumpi\n        /* \"contracts/mojito/sothebys/RoyaltyEngine.sol\":1508:1561  ICreatorCore(tokenContract).getFeeRecipients(tokenId) */\n      mload(0x40)\n      shl(0xe0, 0xb9c4d9fb)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":2304:2329   */\n      dup5\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/mojito/sothebys/RoyaltyEngine.sol\":1508:1552  ICreatorCore(tokenContract).getFeeRecipients */\n      dup6\n      and\n      swap1\n      0xb9c4d9fb\n      swap1\n        /* \"#utility.yul\":2277:2295   */\n      0x24\n      add\n        /* \"contracts/mojito/sothebys/RoyaltyEngine.sol\":1508:1561  ICreatorCore(tokenContract).getFeeRecipients(tokenId) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_32\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_32:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      0x40\n      mstore\n      tag_33\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n        /* \"contracts/mojito/sothebys/RoyaltyEngine.sol\":1581:1627  ICreatorCore(tokenContract).getFeeBps(tokenId) */\n      mload(0x40)\n      shl(0xe0, 0x0ebd4c7f)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":2304:2329   */\n      dup6\n      swap1\n      mstore\n        /* \"contracts/mojito/sothebys/RoyaltyEngine.sol\":1495:1561  recipients = ICreatorCore(tokenContract).getFeeRecipients(tokenId) */\n      swap1\n      swap3\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/mojito/sothebys/RoyaltyEngine.sol\":1581:1618  ICreatorCore(tokenContract).getFeeBps */\n      dup6\n      and\n      swap1\n      0x0ebd4c7f\n      swap1\n        /* \"#utility.yul\":2277:2295   */\n      0x24\n      add\n        /* \"contracts/mojito/sothebys/RoyaltyEngine.sol\":1581:1627  ICreatorCore(tokenContract).getFeeBps(tokenId) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_37\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_37:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      0x40\n      mstore\n      tag_38\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n        /* \"contracts/mojito/sothebys/RoyaltyEngine.sol\":1575:1627  bps = ICreatorCore(tokenContract).getFeeBps(tokenId) */\n      swap1\n      pop\n        /* \"contracts/mojito/sothebys/RoyaltyEngine.sol\":1350:1867  if (... */\n      jump(tag_45)\n    tag_29:\n        /* \"contracts/mojito/sothebys/RoyaltyEngine.sol\":1661:1767  IERC165(tokenContract).supportsInterface(... */\n      mload(0x40)\n      shl(0xe0, 0x01ffc9a7)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/mojito/sothebys/RoyaltyEngine.sol\":1661:1701  IERC165(tokenContract).supportsInterface */\n      dup6\n      and\n      swap1\n      0x01ffc9a7\n      swap1\n        /* \"contracts/mojito/sothebys/RoyaltyEngine.sol\":1661:1767  IERC165(tokenContract).supportsInterface(... */\n      tag_41\n      swap1\n      shl(0xe2, 0x35681b53)\n        /* \"contracts/mojito/sothebys/RoyaltyEngine.sol\":1719:1753  _INTERFACE_ID_ROYALTIES_FOUNDATION */\n      swap1\n        /* \"contracts/mojito/sothebys/RoyaltyEngine.sol\":1661:1767  IERC165(tokenContract).supportsInterface(... */\n      0x04\n      add\n      tag_12\n      jump\t// in\n    tag_41:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_43\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_43:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_44:\n        /* \"contracts/mojito/sothebys/RoyaltyEngine.sol\":1644:1867  if (... */\n      iszero\n      tag_45\n      jumpi\n        /* \"contracts/mojito/sothebys/RoyaltyEngine.sol\":1812:1856  ICreatorCore(tokenContract).getFees(tokenId) */\n      mload(0x40)\n      shl(0xe2, 0x35681b53)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":2304:2329   */\n      dup5\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/mojito/sothebys/RoyaltyEngine.sol\":1812:1847  ICreatorCore(tokenContract).getFees */\n      dup6\n      and\n      swap1\n      0xd5a06d4c\n      swap1\n        /* \"#utility.yul\":2277:2295   */\n      0x24\n      add\n        /* \"contracts/mojito/sothebys/RoyaltyEngine.sol\":1812:1856  ICreatorCore(tokenContract).getFees(tokenId) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_48\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_48:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      0x40\n      mstore\n      tag_49\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      tag_23\n      jump\t// in\n    tag_49:\n        /* \"contracts/mojito/sothebys/RoyaltyEngine.sol\":1792:1856  (recipients, bps) = ICreatorCore(tokenContract).getFees(tokenId) */\n      swap1\n      swap3\n      pop\n      swap1\n      pop\n        /* \"contracts/mojito/sothebys/RoyaltyEngine.sol\":1644:1867  if (... */\n    tag_45:\n        /* \"contracts/mojito/sothebys/RoyaltyEngine.sol\":787:1874  function getRoyalty(... */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:145   */\n    tag_50:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":89:120   */\n      dup2\n      and\n        /* \"#utility.yul\":79:121   */\n      dup2\n      eq\n        /* \"#utility.yul\":69:139   */\n      tag_58\n      jumpi\n        /* \"#utility.yul\":135:136   */\n      0x00\n        /* \"#utility.yul\":132:133   */\n      dup1\n        /* \"#utility.yul\":125:137   */\n      revert\n        /* \"#utility.yul\":69:139   */\n    tag_58:\n        /* \"#utility.yul\":14:145   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":150:465   */\n    tag_6:\n        /* \"#utility.yul\":218:224   */\n      0x00\n        /* \"#utility.yul\":226:232   */\n      dup1\n        /* \"#utility.yul\":279:281   */\n      0x40\n        /* \"#utility.yul\":267:276   */\n      dup4\n        /* \"#utility.yul\":258:265   */\n      dup6\n        /* \"#utility.yul\":254:277   */\n      sub\n        /* \"#utility.yul\":250:282   */\n      slt\n        /* \"#utility.yul\":247:299   */\n      iszero\n      tag_60\n      jumpi\n        /* \"#utility.yul\":295:296   */\n      0x00\n        /* \"#utility.yul\":292:293   */\n      dup1\n        /* \"#utility.yul\":285:297   */\n      revert\n        /* \"#utility.yul\":247:299   */\n    tag_60:\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":321:344   */\n      calldataload\n        /* \"#utility.yul\":353:384   */\n      tag_61\n        /* \"#utility.yul\":378:383   */\n      dup2\n        /* \"#utility.yul\":353:384   */\n      tag_50\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":403:408   */\n      swap5\n        /* \"#utility.yul\":455:457   */\n      0x20\n        /* \"#utility.yul\":440:458   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":427:459   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":150:465   */\n      jump\t// out\n        /* \"#utility.yul\":470:1664   */\n    tag_9:\n        /* \"#utility.yul\":754:756   */\n      0x40\n        /* \"#utility.yul\":766:787   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":836:849   */\n      dup4\n      mload\n        /* \"#utility.yul\":739:757   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":858:880   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":706:710   */\n      0x00\n      swap1\n        /* \"#utility.yul\":933:937   */\n      0x20\n      swap1\n        /* \"#utility.yul\":911:913   */\n      0x60\n        /* \"#utility.yul\":896:914   */\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":960:975   */\n      dup3\n      dup8\n      add\n        /* \"#utility.yul\":706:710   */\n      dup5\n        /* \"#utility.yul\":1003:1198   */\n    tag_63:\n        /* \"#utility.yul\":1017:1023   */\n      dup3\n        /* \"#utility.yul\":1014:1015   */\n      dup2\n        /* \"#utility.yul\":1011:1024   */\n      lt\n        /* \"#utility.yul\":1003:1198   */\n      iszero\n      tag_65\n      jumpi\n        /* \"#utility.yul\":1082:1095   */\n      dup2\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1078:1117   */\n      and\n        /* \"#utility.yul\":1066:1118   */\n      dup5\n      mstore\n        /* \"#utility.yul\":1138:1150   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":1173:1188   */\n      swap1\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":1114:1115   */\n      0x01\n        /* \"#utility.yul\":1032:1041   */\n      add\n        /* \"#utility.yul\":1003:1198   */\n      jump(tag_63)\n    tag_65:\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1234:1253   */\n      dup4\n      dup2\n      sub\n        /* \"#utility.yul\":1214:1232   */\n      dup3\n      dup6\n      add\n        /* \"#utility.yul\":1207:1254   */\n      mstore\n        /* \"#utility.yul\":1304:1317   */\n      dup5\n      mload\n        /* \"#utility.yul\":1326:1347   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":1402:1417   */\n      dup6\n      dup4\n      add\n      swap2\n        /* \"#utility.yul\":1365:1377   */\n      dup4\n      add\n      swap1\n        /* \"#utility.yul\":1437:1438   */\n      0x00\n        /* \"#utility.yul\":1447:1636   */\n    tag_66:\n        /* \"#utility.yul\":1463:1471   */\n      dup2\n        /* \"#utility.yul\":1458:1461   */\n      dup2\n        /* \"#utility.yul\":1455:1472   */\n      lt\n        /* \"#utility.yul\":1447:1636   */\n      iszero\n      tag_68\n      jumpi\n        /* \"#utility.yul\":1532:1547   */\n      dup4\n      mload\n        /* \"#utility.yul\":1518:1548   */\n      dup4\n      mstore\n        /* \"#utility.yul\":1609:1626   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":1570:1584   */\n      swap2\n      dup5\n      add\n      swap2\n        /* \"#utility.yul\":1491:1492   */\n      0x01\n        /* \"#utility.yul\":1482:1493   */\n      add\n        /* \"#utility.yul\":1447:1636   */\n      jump(tag_66)\n    tag_68:\n      pop\n        /* \"#utility.yul\":1653:1658   */\n      swap1\n      swap8\n        /* \"#utility.yul\":470:1664   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1669:1871   */\n    tag_12:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":1831:1864   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1813:1865   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1801:1803   */\n      0x20\n        /* \"#utility.yul\":1786:1804   */\n      add\n      swap1\n        /* \"#utility.yul\":1669:1871   */\n      jump\t// out\n        /* \"#utility.yul\":1876:2153   */\n    tag_16:\n        /* \"#utility.yul\":1943:1949   */\n      0x00\n        /* \"#utility.yul\":1996:1998   */\n      0x20\n        /* \"#utility.yul\":1984:1993   */\n      dup3\n        /* \"#utility.yul\":1975:1982   */\n      dup5\n        /* \"#utility.yul\":1971:1994   */\n      sub\n        /* \"#utility.yul\":1967:1999   */\n      slt\n        /* \"#utility.yul\":1964:2016   */\n      iszero\n      tag_71\n      jumpi\n        /* \"#utility.yul\":2012:2013   */\n      0x00\n        /* \"#utility.yul\":2009:2010   */\n      dup1\n        /* \"#utility.yul\":2002:2014   */\n      revert\n        /* \"#utility.yul\":1964:2016   */\n    tag_71:\n        /* \"#utility.yul\":2044:2053   */\n      dup2\n        /* \"#utility.yul\":2038:2054   */\n      mload\n        /* \"#utility.yul\":2097:2102   */\n      dup1\n        /* \"#utility.yul\":2090:2103   */\n      iszero\n        /* \"#utility.yul\":2083:2104   */\n      iszero\n        /* \"#utility.yul\":2076:2081   */\n      dup2\n        /* \"#utility.yul\":2073:2105   */\n      eq\n        /* \"#utility.yul\":2063:2123   */\n      tag_72\n      jumpi\n        /* \"#utility.yul\":2119:2120   */\n      0x00\n        /* \"#utility.yul\":2116:2117   */\n      dup1\n        /* \"#utility.yul\":2109:2121   */\n      revert\n        /* \"#utility.yul\":2063:2123   */\n    tag_72:\n        /* \"#utility.yul\":2142:2147   */\n      swap4\n        /* \"#utility.yul\":1876:2153   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2340:2467   */\n    tag_51:\n        /* \"#utility.yul\":2401:2411   */\n      0x4e487b71\n        /* \"#utility.yul\":2396:2399   */\n      0xe0\n        /* \"#utility.yul\":2392:2412   */\n      shl\n        /* \"#utility.yul\":2389:2390   */\n      0x00\n        /* \"#utility.yul\":2382:2413   */\n      mstore\n        /* \"#utility.yul\":2432:2436   */\n      0x41\n        /* \"#utility.yul\":2429:2430   */\n      0x04\n        /* \"#utility.yul\":2422:2437   */\n      mstore\n        /* \"#utility.yul\":2456:2460   */\n      0x24\n        /* \"#utility.yul\":2453:2454   */\n      0x00\n        /* \"#utility.yul\":2446:2461   */\n      revert\n        /* \"#utility.yul\":2472:2747   */\n    tag_52:\n        /* \"#utility.yul\":2543:2545   */\n      0x40\n        /* \"#utility.yul\":2537:2546   */\n      mload\n        /* \"#utility.yul\":2608:2610   */\n      0x1f\n        /* \"#utility.yul\":2589:2602   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2585:2612   */\n      and\n        /* \"#utility.yul\":2573:2613   */\n      dup2\n      add\n        /* \"#utility.yul\":2643:2661   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2628:2662   */\n      dup2\n      gt\n        /* \"#utility.yul\":2664:2686   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":2625:2687   */\n      or\n        /* \"#utility.yul\":2622:2710   */\n      iszero\n      tag_77\n      jumpi\n        /* \"#utility.yul\":2690:2708   */\n      tag_77\n      tag_51\n      jump\t// in\n    tag_77:\n        /* \"#utility.yul\":2726:2728   */\n      0x40\n        /* \"#utility.yul\":2719:2741   */\n      mstore\n        /* \"#utility.yul\":2472:2747   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2752:2943   */\n    tag_53:\n        /* \"#utility.yul\":2820:2824   */\n      0x00\n        /* \"#utility.yul\":2853:2871   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2845:2851   */\n      dup3\n        /* \"#utility.yul\":2842:2872   */\n      gt\n        /* \"#utility.yul\":2839:2895   */\n      iszero\n      tag_80\n      jumpi\n        /* \"#utility.yul\":2875:2893   */\n      tag_80\n      tag_51\n      jump\t// in\n    tag_80:\n      pop\n        /* \"#utility.yul\":2920:2921   */\n      0x05\n        /* \"#utility.yul\":2916:2930   */\n      shl\n        /* \"#utility.yul\":2932:2936   */\n      0x20\n        /* \"#utility.yul\":2912:2937   */\n      add\n      swap1\n        /* \"#utility.yul\":2752:2943   */\n      jump\t// out\n        /* \"#utility.yul\":2948:3698   */\n    tag_54:\n        /* \"#utility.yul\":3021:3026   */\n      0x00\n        /* \"#utility.yul\":3074:3077   */\n      dup3\n        /* \"#utility.yul\":3067:3071   */\n      0x1f\n        /* \"#utility.yul\":3059:3065   */\n      dup4\n        /* \"#utility.yul\":3055:3072   */\n      add\n        /* \"#utility.yul\":3051:3078   */\n      slt\n        /* \"#utility.yul\":3041:3096   */\n      tag_82\n      jumpi\n        /* \"#utility.yul\":3092:3093   */\n      0x00\n        /* \"#utility.yul\":3089:3090   */\n      dup1\n        /* \"#utility.yul\":3082:3094   */\n      revert\n        /* \"#utility.yul\":3041:3096   */\n    tag_82:\n        /* \"#utility.yul\":3121:3127   */\n      dup2\n        /* \"#utility.yul\":3115:3128   */\n      mload\n        /* \"#utility.yul\":3147:3151   */\n      0x20\n        /* \"#utility.yul\":3171:3239   */\n      tag_83\n        /* \"#utility.yul\":3187:3238   */\n      tag_84\n        /* \"#utility.yul\":3235:3237   */\n      dup4\n        /* \"#utility.yul\":3187:3238   */\n      tag_53\n      jump\t// in\n    tag_84:\n        /* \"#utility.yul\":3171:3239   */\n      tag_52\n      jump\t// in\n    tag_83:\n        /* \"#utility.yul\":3273:3288   */\n      dup3\n      dup2\n      mstore\n        /* \"#utility.yul\":3359:3360   */\n      0x05\n        /* \"#utility.yul\":3355:3365   */\n      swap3\n      swap1\n      swap3\n      shl\n        /* \"#utility.yul\":3343:3366   */\n      dup5\n      add\n        /* \"#utility.yul\":3339:3371   */\n      dup2\n      add\n      swap2\n        /* \"#utility.yul\":3304:3316   */\n      dup2\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":3383:3398   */\n      dup7\n      dup5\n      gt\n        /* \"#utility.yul\":3380:3415   */\n      iszero\n      tag_85\n      jumpi\n        /* \"#utility.yul\":3411:3412   */\n      0x00\n        /* \"#utility.yul\":3408:3409   */\n      dup1\n        /* \"#utility.yul\":3401:3413   */\n      revert\n        /* \"#utility.yul\":3380:3415   */\n    tag_85:\n        /* \"#utility.yul\":3447:3449   */\n      dup3\n        /* \"#utility.yul\":3439:3445   */\n      dup7\n        /* \"#utility.yul\":3435:3450   */\n      add\n        /* \"#utility.yul\":3459:3669   */\n    tag_86:\n        /* \"#utility.yul\":3475:3481   */\n      dup5\n        /* \"#utility.yul\":3470:3473   */\n      dup2\n        /* \"#utility.yul\":3467:3482   */\n      lt\n        /* \"#utility.yul\":3459:3669   */\n      iszero\n      tag_88\n      jumpi\n        /* \"#utility.yul\":3548:3551   */\n      dup1\n        /* \"#utility.yul\":3542:3552   */\n      mload\n        /* \"#utility.yul\":3565:3596   */\n      tag_89\n        /* \"#utility.yul\":3590:3595   */\n      dup2\n        /* \"#utility.yul\":3565:3596   */\n      tag_50\n      jump\t// in\n    tag_89:\n        /* \"#utility.yul\":3609:3627   */\n      dup4\n      mstore\n        /* \"#utility.yul\":3647:3659   */\n      swap2\n      dup4\n      add\n      swap2\n        /* \"#utility.yul\":3492:3504   */\n      dup4\n      add\n        /* \"#utility.yul\":3459:3669   */\n      jump(tag_86)\n    tag_88:\n      pop\n        /* \"#utility.yul\":3687:3692   */\n      swap7\n        /* \"#utility.yul\":2948:3698   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3703:4370   */\n    tag_55:\n        /* \"#utility.yul\":3768:3773   */\n      0x00\n        /* \"#utility.yul\":3821:3824   */\n      dup3\n        /* \"#utility.yul\":3814:3818   */\n      0x1f\n        /* \"#utility.yul\":3806:3812   */\n      dup4\n        /* \"#utility.yul\":3802:3819   */\n      add\n        /* \"#utility.yul\":3798:3825   */\n      slt\n        /* \"#utility.yul\":3788:3843   */\n      tag_91\n      jumpi\n        /* \"#utility.yul\":3839:3840   */\n      0x00\n        /* \"#utility.yul\":3836:3837   */\n      dup1\n        /* \"#utility.yul\":3829:3841   */\n      revert\n        /* \"#utility.yul\":3788:3843   */\n    tag_91:\n        /* \"#utility.yul\":3868:3874   */\n      dup2\n        /* \"#utility.yul\":3862:3875   */\n      mload\n        /* \"#utility.yul\":3894:3898   */\n      0x20\n        /* \"#utility.yul\":3918:3986   */\n      tag_92\n        /* \"#utility.yul\":3934:3985   */\n      tag_84\n        /* \"#utility.yul\":3982:3984   */\n      dup4\n        /* \"#utility.yul\":3934:3985   */\n      tag_53\n      jump\t// in\n        /* \"#utility.yul\":3918:3986   */\n    tag_92:\n        /* \"#utility.yul\":4020:4035   */\n      dup3\n      dup2\n      mstore\n        /* \"#utility.yul\":4106:4107   */\n      0x05\n        /* \"#utility.yul\":4102:4112   */\n      swap3\n      swap1\n      swap3\n      shl\n        /* \"#utility.yul\":4090:4113   */\n      dup5\n      add\n        /* \"#utility.yul\":4086:4118   */\n      dup2\n      add\n      swap2\n        /* \"#utility.yul\":4051:4063   */\n      dup2\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":4130:4145   */\n      dup7\n      dup5\n      gt\n        /* \"#utility.yul\":4127:4162   */\n      iszero\n      tag_94\n      jumpi\n        /* \"#utility.yul\":4158:4159   */\n      0x00\n        /* \"#utility.yul\":4155:4156   */\n      dup1\n        /* \"#utility.yul\":4148:4160   */\n      revert\n        /* \"#utility.yul\":4127:4162   */\n    tag_94:\n        /* \"#utility.yul\":4194:4196   */\n      dup3\n        /* \"#utility.yul\":4186:4192   */\n      dup7\n        /* \"#utility.yul\":4182:4197   */\n      add\n        /* \"#utility.yul\":4206:4341   */\n    tag_95:\n        /* \"#utility.yul\":4222:4228   */\n      dup5\n        /* \"#utility.yul\":4217:4220   */\n      dup2\n        /* \"#utility.yul\":4214:4229   */\n      lt\n        /* \"#utility.yul\":4206:4341   */\n      iszero\n      tag_88\n      jumpi\n        /* \"#utility.yul\":4288:4298   */\n      dup1\n      mload\n        /* \"#utility.yul\":4276:4299   */\n      dup4\n      mstore\n        /* \"#utility.yul\":4319:4331   */\n      swap2\n      dup4\n      add\n      swap2\n        /* \"#utility.yul\":4239:4251   */\n      dup4\n      add\n        /* \"#utility.yul\":4206:4341   */\n      jump(tag_95)\n        /* \"#utility.yul\":4375:5005   */\n    tag_23:\n        /* \"#utility.yul\":4512:4518   */\n      0x00\n        /* \"#utility.yul\":4520:4526   */\n      dup1\n        /* \"#utility.yul\":4573:4575   */\n      0x40\n        /* \"#utility.yul\":4561:4570   */\n      dup4\n        /* \"#utility.yul\":4552:4559   */\n      dup6\n        /* \"#utility.yul\":4548:4571   */\n      sub\n        /* \"#utility.yul\":4544:4576   */\n      slt\n        /* \"#utility.yul\":4541:4593   */\n      iszero\n      tag_99\n      jumpi\n        /* \"#utility.yul\":4589:4590   */\n      0x00\n        /* \"#utility.yul\":4586:4587   */\n      dup1\n        /* \"#utility.yul\":4579:4591   */\n      revert\n        /* \"#utility.yul\":4541:4593   */\n    tag_99:\n        /* \"#utility.yul\":4622:4631   */\n      dup3\n        /* \"#utility.yul\":4616:4632   */\n      mload\n        /* \"#utility.yul\":4651:4669   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4692:4694   */\n      dup1\n        /* \"#utility.yul\":4684:4690   */\n      dup3\n        /* \"#utility.yul\":4681:4695   */\n      gt\n        /* \"#utility.yul\":4678:4712   */\n      iszero\n      tag_100\n      jumpi\n        /* \"#utility.yul\":4708:4709   */\n      0x00\n        /* \"#utility.yul\":4705:4706   */\n      dup1\n        /* \"#utility.yul\":4698:4710   */\n      revert\n        /* \"#utility.yul\":4678:4712   */\n    tag_100:\n        /* \"#utility.yul\":4731:4811   */\n      tag_101\n        /* \"#utility.yul\":4803:4810   */\n      dup7\n        /* \"#utility.yul\":4794:4800   */\n      dup4\n        /* \"#utility.yul\":4783:4792   */\n      dup8\n        /* \"#utility.yul\":4779:4801   */\n      add\n        /* \"#utility.yul\":4731:4811   */\n      tag_54\n      jump\t// in\n    tag_101:\n        /* \"#utility.yul\":4721:4811   */\n      swap4\n      pop\n        /* \"#utility.yul\":4857:4859   */\n      0x20\n        /* \"#utility.yul\":4846:4855   */\n      dup6\n        /* \"#utility.yul\":4842:4860   */\n      add\n        /* \"#utility.yul\":4836:4861   */\n      mload\n        /* \"#utility.yul\":4820:4861   */\n      swap2\n      pop\n        /* \"#utility.yul\":4886:4888   */\n      dup1\n        /* \"#utility.yul\":4876:4884   */\n      dup3\n        /* \"#utility.yul\":4873:4889   */\n      gt\n        /* \"#utility.yul\":4870:4906   */\n      iszero\n      tag_102\n      jumpi\n        /* \"#utility.yul\":4902:4903   */\n      0x00\n        /* \"#utility.yul\":4899:4900   */\n      dup1\n        /* \"#utility.yul\":4892:4904   */\n      revert\n        /* \"#utility.yul\":4870:4906   */\n    tag_102:\n      pop\n        /* \"#utility.yul\":4925:4999   */\n      tag_103\n        /* \"#utility.yul\":4991:4998   */\n      dup6\n        /* \"#utility.yul\":4980:4988   */\n      dup3\n        /* \"#utility.yul\":4969:4978   */\n      dup7\n        /* \"#utility.yul\":4965:4989   */\n      add\n        /* \"#utility.yul\":4925:4999   */\n      tag_55\n      jump\t// in\n    tag_103:\n        /* \"#utility.yul\":4915:4999   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":4375:5005   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5010:5389   */\n    tag_34:\n        /* \"#utility.yul\":5113:5119   */\n      0x00\n        /* \"#utility.yul\":5166:5168   */\n      0x20\n        /* \"#utility.yul\":5154:5163   */\n      dup3\n        /* \"#utility.yul\":5145:5152   */\n      dup5\n        /* \"#utility.yul\":5141:5164   */\n      sub\n        /* \"#utility.yul\":5137:5169   */\n      slt\n        /* \"#utility.yul\":5134:5186   */\n      iszero\n      tag_105\n      jumpi\n        /* \"#utility.yul\":5182:5183   */\n      0x00\n        /* \"#utility.yul\":5179:5180   */\n      dup1\n        /* \"#utility.yul\":5172:5184   */\n      revert\n        /* \"#utility.yul\":5134:5186   */\n    tag_105:\n        /* \"#utility.yul\":5215:5224   */\n      dup2\n        /* \"#utility.yul\":5209:5225   */\n      mload\n        /* \"#utility.yul\":5248:5266   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5240:5246   */\n      dup2\n        /* \"#utility.yul\":5237:5267   */\n      gt\n        /* \"#utility.yul\":5234:5284   */\n      iszero\n      tag_106\n      jumpi\n        /* \"#utility.yul\":5280:5281   */\n      0x00\n        /* \"#utility.yul\":5277:5278   */\n      dup1\n        /* \"#utility.yul\":5270:5282   */\n      revert\n        /* \"#utility.yul\":5234:5284   */\n    tag_106:\n        /* \"#utility.yul\":5303:5383   */\n      tag_107\n        /* \"#utility.yul\":5375:5382   */\n      dup5\n        /* \"#utility.yul\":5366:5372   */\n      dup3\n        /* \"#utility.yul\":5355:5364   */\n      dup6\n        /* \"#utility.yul\":5351:5373   */\n      add\n        /* \"#utility.yul\":5303:5383   */\n      tag_54\n      jump\t// in\n    tag_107:\n        /* \"#utility.yul\":5293:5383   */\n      swap5\n        /* \"#utility.yul\":5010:5389   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5394:5757   */\n    tag_39:\n        /* \"#utility.yul\":5489:5495   */\n      0x00\n        /* \"#utility.yul\":5542:5544   */\n      0x20\n        /* \"#utility.yul\":5530:5539   */\n      dup3\n        /* \"#utility.yul\":5521:5528   */\n      dup5\n        /* \"#utility.yul\":5517:5540   */\n      sub\n        /* \"#utility.yul\":5513:5545   */\n      slt\n        /* \"#utility.yul\":5510:5562   */\n      iszero\n      tag_109\n      jumpi\n        /* \"#utility.yul\":5558:5559   */\n      0x00\n        /* \"#utility.yul\":5555:5556   */\n      dup1\n        /* \"#utility.yul\":5548:5560   */\n      revert\n        /* \"#utility.yul\":5510:5562   */\n    tag_109:\n        /* \"#utility.yul\":5591:5600   */\n      dup2\n        /* \"#utility.yul\":5585:5601   */\n      mload\n        /* \"#utility.yul\":5624:5642   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5616:5622   */\n      dup2\n        /* \"#utility.yul\":5613:5643   */\n      gt\n        /* \"#utility.yul\":5610:5660   */\n      iszero\n      tag_110\n      jumpi\n        /* \"#utility.yul\":5656:5657   */\n      0x00\n        /* \"#utility.yul\":5653:5654   */\n      dup1\n        /* \"#utility.yul\":5646:5658   */\n      revert\n        /* \"#utility.yul\":5610:5660   */\n    tag_110:\n        /* \"#utility.yul\":5679:5751   */\n      tag_107\n        /* \"#utility.yul\":5743:5750   */\n      dup5\n        /* \"#utility.yul\":5734:5740   */\n      dup3\n        /* \"#utility.yul\":5723:5732   */\n      dup6\n        /* \"#utility.yul\":5719:5741   */\n      add\n        /* \"#utility.yul\":5679:5751   */\n      tag_55\n      jump\t// in\n\n    auxdata: 0xa2646970667358221220648d46ca4ae85610a2b4c0aa7acabfd1976b326e832957fb3629e41a9e3a01b764736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506106eb806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80636e44a72f14610030575b600080fd5b61004361003e3660046103b7565b61005a565b6040516100519291906103e3565b60405180910390f35b6040516301ffc9a760e01b815260609081906001600160a01b038516906301ffc9a79061009290635d9dd7eb60e11b90600401610467565b602060405180830381865afa1580156100af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100d3919061047c565b1561014f57604051635d9dd7eb60e11b8152600481018490526001600160a01b0385169063bb3bafd690602401600060405180830381865afa15801561011d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261014591908101906105df565b9092509050610398565b6040516301ffc9a760e01b81526001600160a01b038516906301ffc9a79061018290632dde656160e21b90600401610467565b602060405180830381865afa15801561019f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c3919061047c565b156102ac5760405163b9c4d9fb60e01b8152600481018490526001600160a01b0385169063b9c4d9fb90602401600060405180830381865afa15801561020d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102359190810190610643565b604051630ebd4c7f60e01b8152600481018590529092506001600160a01b03851690630ebd4c7f90602401600060405180830381865afa15801561027d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102a59190810190610680565b9050610398565b6040516301ffc9a760e01b81526001600160a01b038516906301ffc9a7906102df906335681b5360e21b90600401610467565b602060405180830381865afa1580156102fc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610320919061047c565b15610398576040516335681b5360e21b8152600481018490526001600160a01b0385169063d5a06d4c90602401600060405180830381865afa15801561036a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261039291908101906105df565b90925090505b9250929050565b6001600160a01b03811681146103b457600080fd5b50565b600080604083850312156103ca57600080fd5b82356103d58161039f565b946020939093013593505050565b604080825283519082018190526000906020906060840190828701845b828110156104255781516001600160a01b031684529284019290840190600101610400565b5050508381038285015284518082528583019183019060005b8181101561045a5783518352928401929184019160010161043e565b5090979650505050505050565b6001600160e01b031991909116815260200190565b60006020828403121561048e57600080fd5b8151801515811461049e57600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156104e4576104e46104a5565b604052919050565b600067ffffffffffffffff821115610506576105066104a5565b5060051b60200190565b600082601f83011261052157600080fd5b81516020610536610531836104ec565b6104bb565b82815260059290921b8401810191818101908684111561055557600080fd5b8286015b8481101561057957805161056c8161039f565b8352918301918301610559565b509695505050505050565b600082601f83011261059557600080fd5b815160206105a5610531836104ec565b82815260059290921b840181019181810190868411156105c457600080fd5b8286015b8481101561057957805183529183019183016105c8565b600080604083850312156105f257600080fd5b825167ffffffffffffffff8082111561060a57600080fd5b61061686838701610510565b9350602085015191508082111561062c57600080fd5b5061063985828601610584565b9150509250929050565b60006020828403121561065557600080fd5b815167ffffffffffffffff81111561066c57600080fd5b61067884828501610510565b949350505050565b60006020828403121561069257600080fd5b815167ffffffffffffffff8111156106a957600080fd5b6106788482850161058456fea2646970667358221220648d46ca4ae85610a2b4c0aa7acabfd1976b326e832957fb3629e41a9e3a01b764736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6EB DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6E44A72F EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x3E CALLDATASIZE PUSH1 0x4 PUSH2 0x3B7 JUMP JUMPDEST PUSH2 0x5A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x51 SWAP3 SWAP2 SWAP1 PUSH2 0x3E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x60 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x1FFC9A7 SWAP1 PUSH2 0x92 SWAP1 PUSH4 0x5D9DD7EB PUSH1 0xE1 SHL SWAP1 PUSH1 0x4 ADD PUSH2 0x467 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD3 SWAP2 SWAP1 PUSH2 0x47C JUMP JUMPDEST ISZERO PUSH2 0x14F JUMPI PUSH1 0x40 MLOAD PUSH4 0x5D9DD7EB PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBB3BAFD6 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x145 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x5DF JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x398 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x1FFC9A7 SWAP1 PUSH2 0x182 SWAP1 PUSH4 0x2DDE6561 PUSH1 0xE2 SHL SWAP1 PUSH1 0x4 ADD PUSH2 0x467 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x19F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C3 SWAP2 SWAP1 PUSH2 0x47C JUMP JUMPDEST ISZERO PUSH2 0x2AC JUMPI PUSH1 0x40 MLOAD PUSH4 0xB9C4D9FB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xB9C4D9FB SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x20D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x235 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x643 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xEBD4C7F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xEBD4C7F SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x27D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x2A5 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x680 JUMP JUMPDEST SWAP1 POP PUSH2 0x398 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x1FFC9A7 SWAP1 PUSH2 0x2DF SWAP1 PUSH4 0x35681B53 PUSH1 0xE2 SHL SWAP1 PUSH1 0x4 ADD PUSH2 0x467 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2FC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x320 SWAP2 SWAP1 PUSH2 0x47C JUMP JUMPDEST ISZERO PUSH2 0x398 JUMPI PUSH1 0x40 MLOAD PUSH4 0x35681B53 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xD5A06D4C SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x36A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x392 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x5DF JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x3D5 DUP2 PUSH2 0x39F JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 DUP3 MSTORE DUP4 MLOAD SWAP1 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x20 SWAP1 PUSH1 0x60 DUP5 ADD SWAP1 DUP3 DUP8 ADD DUP5 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x425 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x400 JUMP JUMPDEST POP POP POP DUP4 DUP2 SUB DUP3 DUP6 ADD MSTORE DUP5 MLOAD DUP1 DUP3 MSTORE DUP6 DUP4 ADD SWAP2 DUP4 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x45A JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x43E JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x48E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x49E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x4E4 JUMPI PUSH2 0x4E4 PUSH2 0x4A5 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x506 JUMPI PUSH2 0x506 PUSH2 0x4A5 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x521 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 PUSH2 0x536 PUSH2 0x531 DUP4 PUSH2 0x4EC JUMP JUMPDEST PUSH2 0x4BB JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x555 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x579 JUMPI DUP1 MLOAD PUSH2 0x56C DUP2 PUSH2 0x39F JUMP JUMPDEST DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x559 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x595 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 PUSH2 0x5A5 PUSH2 0x531 DUP4 PUSH2 0x4EC JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x5C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x579 JUMPI DUP1 MLOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x5C8 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x60A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x616 DUP7 DUP4 DUP8 ADD PUSH2 0x510 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x62C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x639 DUP6 DUP3 DUP7 ADD PUSH2 0x584 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x655 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x66C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x678 DUP5 DUP3 DUP6 ADD PUSH2 0x510 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x692 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x678 DUP5 DUP3 DUP6 ADD PUSH2 0x584 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH5 0x8D46CA4AE8 JUMP LT LOG2 0xB4 0xC0 0xAA PUSH27 0xCABFD1976B326E832957FB3629E41A9E3A01B764736F6C63430008 GT STOP CALLER ",
							"sourceMap": "283:1593:2:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@getRoyalty_397": {
									"entryPoint": 90,
									"id": 397,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_array_address_payable_dyn_fromMemory": {
									"entryPoint": 1296,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_array_uint256_dyn_fromMemory": {
									"entryPoint": 1412,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 951,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_address_payable_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 1603,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_array$_t_address_payable_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 1503,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 1664,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 1148,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_address_payable_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_address_payable_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 995,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": 1127,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 1211,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_array_address_payable_dyn": {
									"entryPoint": 1260,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 1189,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 927,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5759:4",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:4",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:86:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "123:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "132:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "135:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "125:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "125:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "125:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "82:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "93:5:4"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "108:3:4",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "113:1:4",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "104:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "104:11:4"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "117:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "100:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "100:19:4"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "89:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "89:31:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "79:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "79:42:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "72:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "72:50:4"
															},
															"nodeType": "YulIf",
															"src": "69:70:4"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "48:5:4",
														"type": ""
													}
												],
												"src": "14:131:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "237:228:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "283:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "292:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "295:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "285:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "285:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "285:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "258:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "267:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "254:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "254:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "279:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "250:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "250:32:4"
															},
															"nodeType": "YulIf",
															"src": "247:52:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "308:36:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "321:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "321:23:4"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "312:5:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "378:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "353:24:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "353:31:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "353:31:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "393:15:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "403:5:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "393:6:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "417:42:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "444:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "455:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "440:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "440:18:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "427:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "427:32:4"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "417:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "195:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "206:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "218:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "226:6:4",
														"type": ""
													}
												],
												"src": "150:315:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "715:949:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "725:32:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "743:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "754:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "739:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "739:18:4"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "729:6:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "773:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "784:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "766:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "766:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "766:21:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "796:17:4",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "807:6:4"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "800:3:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "822:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "842:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "836:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "836:13:4"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "826:6:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "865:6:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "873:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "858:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "858:22:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "858:22:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "889:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "900:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "911:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "896:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "896:18:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "889:3:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "923:14:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "933:4:4",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "927:2:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "946:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "964:6:4"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "972:2:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "960:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "960:15:4"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "950:6:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "984:10:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "993:1:4",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "988:1:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1052:146:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "1073:3:4"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "srcPtr",
																									"nodeType": "YulIdentifier",
																									"src": "1088:6:4"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "1082:5:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1082:13:4"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "1105:3:4",
																											"type": "",
																											"value": "160"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "1110:1:4",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "1101:3:4"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1101:11:4"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "1114:1:4",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nodeType": "YulIdentifier",
																								"src": "1097:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1097:19:4"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "1078:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1078:39:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1066:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1066:52:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1066:52:4"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1131:19:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "1142:3:4"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1147:2:4"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1138:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1138:12:4"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1131:3:4"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1163:25:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "1177:6:4"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1185:2:4"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1173:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1173:15:4"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1163:6:4"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1014:1:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1017:6:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1011:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1011:13:4"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1025:18:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1027:14:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1036:1:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1039:1:4",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1032:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1032:9:4"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1027:1:4"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1007:3:4",
																"statements": []
															},
															"src": "1003:195:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1218:9:4"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1229:2:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1214:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1214:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1238:3:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1243:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1234:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1234:19:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1207:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1207:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1207:47:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1263:16:4",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "1276:3:4"
															},
															"variables": [
																{
																	"name": "pos_1",
																	"nodeType": "YulTypedName",
																	"src": "1267:5:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1288:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1310:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1304:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1304:13:4"
															},
															"variables": [
																{
																	"name": "length_1",
																	"nodeType": "YulTypedName",
																	"src": "1292:8:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1333:3:4"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "1338:8:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1326:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1326:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1326:21:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1356:21:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1369:3:4"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1374:2:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1365:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1365:12:4"
															},
															"variableNames": [
																{
																	"name": "pos_1",
																	"nodeType": "YulIdentifier",
																	"src": "1356:5:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1386:31:4",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1406:6:4"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1414:2:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1402:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1402:15:4"
															},
															"variables": [
																{
																	"name": "srcPtr_1",
																	"nodeType": "YulTypedName",
																	"src": "1390:8:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1426:12:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1437:1:4",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i_1",
																	"nodeType": "YulTypedName",
																	"src": "1430:3:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1504:132:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos_1",
																					"nodeType": "YulIdentifier",
																					"src": "1525:5:4"
																				},
																				{
																					"arguments": [
																						{
																							"name": "srcPtr_1",
																							"nodeType": "YulIdentifier",
																							"src": "1538:8:4"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1532:5:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1532:15:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1518:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1518:30:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1518:30:4"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1561:23:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos_1",
																					"nodeType": "YulIdentifier",
																					"src": "1574:5:4"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1581:2:4"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1570:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1570:14:4"
																		},
																		"variableNames": [
																			{
																				"name": "pos_1",
																				"nodeType": "YulIdentifier",
																				"src": "1561:5:4"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1597:29:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr_1",
																					"nodeType": "YulIdentifier",
																					"src": "1613:8:4"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1623:2:4"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1609:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1609:17:4"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr_1",
																				"nodeType": "YulIdentifier",
																				"src": "1597:8:4"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i_1",
																		"nodeType": "YulIdentifier",
																		"src": "1458:3:4"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "1463:8:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1455:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1455:17:4"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1473:22:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1475:18:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "i_1",
																					"nodeType": "YulIdentifier",
																					"src": "1486:3:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1491:1:4",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1482:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1482:11:4"
																		},
																		"variableNames": [
																			{
																				"name": "i_1",
																				"nodeType": "YulIdentifier",
																				"src": "1475:3:4"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1451:3:4",
																"statements": []
															},
															"src": "1447:189:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1645:13:4",
															"value": {
																"name": "pos_1",
																"nodeType": "YulIdentifier",
																"src": "1653:5:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1645:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_address_payable_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_address_payable_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "676:9:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "687:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "695:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "706:4:4",
														"type": ""
													}
												],
												"src": "470:1194:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1768:103:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1778:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1790:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1801:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1786:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1786:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1778:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1820:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1835:6:4"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1847:3:4",
																						"type": "",
																						"value": "224"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1852:10:4",
																						"type": "",
																						"value": "0xffffffff"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "1843:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1843:20:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1831:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1831:33:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1813:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1813:52:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1813:52:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1737:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1748:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1759:4:4",
														"type": ""
													}
												],
												"src": "1669:202:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1954:199:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2000:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2009:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2012:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2002:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2002:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2002:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1975:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1984:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1971:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1971:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1996:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1967:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1967:32:4"
															},
															"nodeType": "YulIf",
															"src": "1964:52:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2025:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2044:9:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2038:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2038:16:4"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2029:5:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2107:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2116:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2119:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2109:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2109:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2109:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2076:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "2097:5:4"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "2090:6:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2090:13:4"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2083:6:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2083:21:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2073:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2073:32:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2066:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2066:40:4"
															},
															"nodeType": "YulIf",
															"src": "2063:60:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2132:15:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2142:5:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2132:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1920:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1931:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1943:6:4",
														"type": ""
													}
												],
												"src": "1876:277:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2259:76:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2269:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2281:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2292:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2277:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2277:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2269:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2311:9:4"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2322:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2304:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2304:25:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2304:25:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2228:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2239:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2250:4:4",
														"type": ""
													}
												],
												"src": "2158:177:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2372:95:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2389:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2396:3:4",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2401:10:4",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2392:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2392:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2382:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2382:31:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2382:31:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2429:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2432:4:4",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2422:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2422:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2422:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2453:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2456:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2446:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2446:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2446:15:4"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "2340:127:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2517:230:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2527:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2543:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2537:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2537:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "2527:6:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2555:58:4",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2577:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nodeType": "YulIdentifier",
																						"src": "2593:4:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2599:2:4",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2589:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2589:13:4"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2608:2:4",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2604:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2604:7:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2585:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2585:27:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2573:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2573:40:4"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "2559:10:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2688:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2690:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2690:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2690:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2631:10:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2643:18:4",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2628:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2628:34:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2667:10:4"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2679:6:4"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2664:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2664:22:4"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2625:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2625:62:4"
															},
															"nodeType": "YulIf",
															"src": "2622:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2726:2:4",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "2730:10:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2719:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2719:22:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2719:22:4"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2497:4:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2506:6:4",
														"type": ""
													}
												],
												"src": "2472:275:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2829:114:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2873:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2875:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2875:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2875:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2845:6:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2853:18:4",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2842:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2842:30:4"
															},
															"nodeType": "YulIf",
															"src": "2839:56:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2904:33:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2920:1:4",
																				"type": "",
																				"value": "5"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2923:6:4"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2916:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2916:14:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2932:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2912:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2912:25:4"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2904:4:4"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_array_address_payable_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2809:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2820:4:4",
														"type": ""
													}
												],
												"src": "2752:191:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3031:667:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3080:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3089:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3092:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3082:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3082:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3082:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3059:6:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3067:4:4",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3055:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3055:17:4"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "3074:3:4"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3051:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3051:27:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3044:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3044:35:4"
															},
															"nodeType": "YulIf",
															"src": "3041:55:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3105:23:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3121:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3115:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3115:13:4"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3109:2:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3137:14:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3147:4:4",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "3141:2:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3160:79:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3235:2:4"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_array_address_payable_dyn",
																			"nodeType": "YulIdentifier",
																			"src": "3187:47:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3187:51:4"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "3171:15:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3171:68:4"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "3164:3:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3248:16:4",
															"value": {
																"name": "dst",
																"nodeType": "YulIdentifier",
																"src": "3261:3:4"
															},
															"variables": [
																{
																	"name": "dst_1",
																	"nodeType": "YulTypedName",
																	"src": "3252:5:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "3280:3:4"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3285:2:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3273:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3273:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3273:15:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3297:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "3308:3:4"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3313:2:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3304:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3304:12:4"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "3297:3:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3325:46:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3347:6:4"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3359:1:4",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "3362:2:4"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "3355:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3355:10:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3343:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3343:23:4"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3368:2:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3339:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3339:32:4"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "3329:6:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3399:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3408:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3411:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3401:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3401:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3401:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3386:6:4"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3394:3:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3383:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3383:15:4"
															},
															"nodeType": "YulIf",
															"src": "3380:35:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3424:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3439:6:4"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3447:2:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3435:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3435:15:4"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "3428:3:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3515:154:4",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "3529:23:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "3548:3:4"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "3542:5:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3542:10:4"
																		},
																		"variables": [
																			{
																				"name": "value",
																				"nodeType": "YulTypedName",
																				"src": "3533:5:4",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value",
																					"nodeType": "YulIdentifier",
																					"src": "3590:5:4"
																				}
																			],
																			"functionName": {
																				"name": "validator_revert_address",
																				"nodeType": "YulIdentifier",
																				"src": "3565:24:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3565:31:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3565:31:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "3616:3:4"
																				},
																				{
																					"name": "value",
																					"nodeType": "YulIdentifier",
																					"src": "3621:5:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3609:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3609:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3609:18:4"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3640:19:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "3651:3:4"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "3656:2:4"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3647:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3647:12:4"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "3640:3:4"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "3470:3:4"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3475:6:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3467:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3467:15:4"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3483:23:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3485:19:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "3496:3:4"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "3501:2:4"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3492:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3492:12:4"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "3485:3:4"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3463:3:4",
																"statements": []
															},
															"src": "3459:210:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3678:14:4",
															"value": {
																"name": "dst_1",
																"nodeType": "YulIdentifier",
																"src": "3687:5:4"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3678:5:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_array_address_payable_dyn_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3005:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3013:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "3021:5:4",
														"type": ""
													}
												],
												"src": "2948:750:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3778:592:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3827:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3836:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3839:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3829:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3829:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3829:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3806:6:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3814:4:4",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3802:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3802:17:4"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "3821:3:4"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3798:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3798:27:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3791:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3791:35:4"
															},
															"nodeType": "YulIf",
															"src": "3788:55:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3852:23:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3868:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3862:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3862:13:4"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3856:2:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3884:14:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3894:4:4",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "3888:2:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3907:79:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3982:2:4"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_array_address_payable_dyn",
																			"nodeType": "YulIdentifier",
																			"src": "3934:47:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3934:51:4"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "3918:15:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3918:68:4"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "3911:3:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3995:16:4",
															"value": {
																"name": "dst",
																"nodeType": "YulIdentifier",
																"src": "4008:3:4"
															},
															"variables": [
																{
																	"name": "dst_1",
																	"nodeType": "YulTypedName",
																	"src": "3999:5:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "4027:3:4"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4032:2:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4020:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4020:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4020:15:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4044:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "4055:3:4"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "4060:2:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4051:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4051:12:4"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "4044:3:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4072:46:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4094:6:4"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4106:1:4",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "4109:2:4"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "4102:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4102:10:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4090:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4090:23:4"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "4115:2:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4086:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4086:32:4"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "4076:6:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4146:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4155:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4158:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4148:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4148:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4148:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4133:6:4"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "4141:3:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4130:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4130:15:4"
															},
															"nodeType": "YulIf",
															"src": "4127:35:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4171:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4186:6:4"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "4194:2:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4182:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4182:15:4"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "4175:3:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4262:79:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "4283:3:4"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "4294:3:4"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "4288:5:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4288:10:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4276:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4276:23:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4276:23:4"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4312:19:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "4323:3:4"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "4328:2:4"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4319:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4319:12:4"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "4312:3:4"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "4217:3:4"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4222:6:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4214:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4214:15:4"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "4230:23:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4232:19:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "4243:3:4"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "4248:2:4"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4239:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4239:12:4"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "4232:3:4"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "4210:3:4",
																"statements": []
															},
															"src": "4206:135:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4350:14:4",
															"value": {
																"name": "dst_1",
																"nodeType": "YulIdentifier",
																"src": "4359:5:4"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "4350:5:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_array_uint256_dyn_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3752:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3760:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "3768:5:4",
														"type": ""
													}
												],
												"src": "3703:667:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4531:474:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4577:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4586:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4589:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4579:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4579:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4579:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4552:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4561:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4548:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4548:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4573:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4544:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4544:32:4"
															},
															"nodeType": "YulIf",
															"src": "4541:52:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4602:30:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4622:9:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4616:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4616:16:4"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "4606:6:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4641:28:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4651:18:4",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4645:2:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4696:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4705:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4708:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4698:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4698:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4698:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4684:6:4"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4692:2:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4681:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4681:14:4"
															},
															"nodeType": "YulIf",
															"src": "4678:34:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4721:90:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4783:9:4"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4794:6:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4779:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4779:22:4"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4803:7:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_address_payable_dyn_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "4731:47:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4731:80:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4721:6:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4820:41:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4846:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4857:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4842:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4842:18:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4836:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4836:25:4"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "4824:8:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4890:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4899:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4902:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4892:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4892:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4892:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "4876:8:4"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4886:2:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4873:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4873:16:4"
															},
															"nodeType": "YulIf",
															"src": "4870:36:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4915:84:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4969:9:4"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "4980:8:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4965:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4965:24:4"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4991:7:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "4925:39:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4925:74:4"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4915:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_payable_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4489:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4500:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4512:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4520:6:4",
														"type": ""
													}
												],
												"src": "4375:630:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5124:265:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5170:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5179:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5182:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5172:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5172:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5172:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5145:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5154:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5141:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5141:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5166:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5137:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5137:32:4"
															},
															"nodeType": "YulIf",
															"src": "5134:52:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5195:30:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5215:9:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5209:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5209:16:4"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "5199:6:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5268:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5277:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5280:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5270:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5270:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5270:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5240:6:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5248:18:4",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5237:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5237:30:4"
															},
															"nodeType": "YulIf",
															"src": "5234:50:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5293:90:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5355:9:4"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5366:6:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5351:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5351:22:4"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5375:7:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_address_payable_dyn_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "5303:47:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5303:80:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5293:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_payable_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5090:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5101:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5113:6:4",
														"type": ""
													}
												],
												"src": "5010:379:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5500:257:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5546:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5555:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5558:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5548:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5548:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5548:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5521:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5530:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5517:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5517:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5542:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5513:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5513:32:4"
															},
															"nodeType": "YulIf",
															"src": "5510:52:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5571:30:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5591:9:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5585:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5585:16:4"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "5575:6:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5644:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5653:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5656:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5646:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5646:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5646:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5616:6:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5624:18:4",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5613:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5613:30:4"
															},
															"nodeType": "YulIf",
															"src": "5610:50:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5669:82:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5723:9:4"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5734:6:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5719:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5719:22:4"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5743:7:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "5679:39:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5679:72:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5669:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5466:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5477:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5489:6:4",
														"type": ""
													}
												],
												"src": "5394:363:4"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_array$_t_address_payable_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_address_payable_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        let tail_1 := add(headStart, 64)\n        mstore(headStart, 64)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 96)\n        let _1 := 0x20\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        mstore(add(headStart, _1), sub(pos, headStart))\n        let pos_1 := pos\n        let length_1 := mload(value1)\n        mstore(pos, length_1)\n        pos_1 := add(pos, _1)\n        let srcPtr_1 := add(value1, _1)\n        let i_1 := 0\n        for { } lt(i_1, length_1) { i_1 := add(i_1, 1) }\n        {\n            mstore(pos_1, mload(srcPtr_1))\n            pos_1 := add(pos_1, _1)\n            srcPtr_1 := add(srcPtr_1, _1)\n        }\n        tail := pos_1\n    }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, shl(224, 0xffffffff)))\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_array_address_payable_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function abi_decode_array_address_payable_dyn_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_address_payable_dyn(_1))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, _2)\n        let srcEnd := add(add(offset, shl(5, _1)), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            let value := mload(src)\n            validator_revert_address(value)\n            mstore(dst, value)\n            dst := add(dst, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_array_uint256_dyn_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_address_payable_dyn(_1))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, _2)\n        let srcEnd := add(add(offset, shl(5, _1)), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            mstore(dst, mload(src))\n            dst := add(dst, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_tuple_t_array$_t_address_payable_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_array_address_payable_dyn_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_array_uint256_dyn_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function abi_decode_tuple_t_array$_t_address_payable_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := mload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_array_address_payable_dyn_fromMemory(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := mload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_array_uint256_dyn_fromMemory(add(headStart, offset), dataEnd)\n    }\n}",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c80636e44a72f14610030575b600080fd5b61004361003e3660046103b7565b61005a565b6040516100519291906103e3565b60405180910390f35b6040516301ffc9a760e01b815260609081906001600160a01b038516906301ffc9a79061009290635d9dd7eb60e11b90600401610467565b602060405180830381865afa1580156100af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100d3919061047c565b1561014f57604051635d9dd7eb60e11b8152600481018490526001600160a01b0385169063bb3bafd690602401600060405180830381865afa15801561011d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261014591908101906105df565b9092509050610398565b6040516301ffc9a760e01b81526001600160a01b038516906301ffc9a79061018290632dde656160e21b90600401610467565b602060405180830381865afa15801561019f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c3919061047c565b156102ac5760405163b9c4d9fb60e01b8152600481018490526001600160a01b0385169063b9c4d9fb90602401600060405180830381865afa15801561020d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102359190810190610643565b604051630ebd4c7f60e01b8152600481018590529092506001600160a01b03851690630ebd4c7f90602401600060405180830381865afa15801561027d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102a59190810190610680565b9050610398565b6040516301ffc9a760e01b81526001600160a01b038516906301ffc9a7906102df906335681b5360e21b90600401610467565b602060405180830381865afa1580156102fc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610320919061047c565b15610398576040516335681b5360e21b8152600481018490526001600160a01b0385169063d5a06d4c90602401600060405180830381865afa15801561036a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261039291908101906105df565b90925090505b9250929050565b6001600160a01b03811681146103b457600080fd5b50565b600080604083850312156103ca57600080fd5b82356103d58161039f565b946020939093013593505050565b604080825283519082018190526000906020906060840190828701845b828110156104255781516001600160a01b031684529284019290840190600101610400565b5050508381038285015284518082528583019183019060005b8181101561045a5783518352928401929184019160010161043e565b5090979650505050505050565b6001600160e01b031991909116815260200190565b60006020828403121561048e57600080fd5b8151801515811461049e57600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156104e4576104e46104a5565b604052919050565b600067ffffffffffffffff821115610506576105066104a5565b5060051b60200190565b600082601f83011261052157600080fd5b81516020610536610531836104ec565b6104bb565b82815260059290921b8401810191818101908684111561055557600080fd5b8286015b8481101561057957805161056c8161039f565b8352918301918301610559565b509695505050505050565b600082601f83011261059557600080fd5b815160206105a5610531836104ec565b82815260059290921b840181019181810190868411156105c457600080fd5b8286015b8481101561057957805183529183019183016105c8565b600080604083850312156105f257600080fd5b825167ffffffffffffffff8082111561060a57600080fd5b61061686838701610510565b9350602085015191508082111561062c57600080fd5b5061063985828601610584565b9150509250929050565b60006020828403121561065557600080fd5b815167ffffffffffffffff81111561066c57600080fd5b61067884828501610510565b949350505050565b60006020828403121561069257600080fd5b815167ffffffffffffffff8111156106a957600080fd5b6106788482850161058456fea2646970667358221220648d46ca4ae85610a2b4c0aa7acabfd1976b326e832957fb3629e41a9e3a01b764736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6E44A72F EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x3E CALLDATASIZE PUSH1 0x4 PUSH2 0x3B7 JUMP JUMPDEST PUSH2 0x5A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x51 SWAP3 SWAP2 SWAP1 PUSH2 0x3E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x60 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x1FFC9A7 SWAP1 PUSH2 0x92 SWAP1 PUSH4 0x5D9DD7EB PUSH1 0xE1 SHL SWAP1 PUSH1 0x4 ADD PUSH2 0x467 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD3 SWAP2 SWAP1 PUSH2 0x47C JUMP JUMPDEST ISZERO PUSH2 0x14F JUMPI PUSH1 0x40 MLOAD PUSH4 0x5D9DD7EB PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBB3BAFD6 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x145 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x5DF JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x398 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x1FFC9A7 SWAP1 PUSH2 0x182 SWAP1 PUSH4 0x2DDE6561 PUSH1 0xE2 SHL SWAP1 PUSH1 0x4 ADD PUSH2 0x467 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x19F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C3 SWAP2 SWAP1 PUSH2 0x47C JUMP JUMPDEST ISZERO PUSH2 0x2AC JUMPI PUSH1 0x40 MLOAD PUSH4 0xB9C4D9FB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xB9C4D9FB SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x20D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x235 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x643 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xEBD4C7F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xEBD4C7F SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x27D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x2A5 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x680 JUMP JUMPDEST SWAP1 POP PUSH2 0x398 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x1FFC9A7 SWAP1 PUSH2 0x2DF SWAP1 PUSH4 0x35681B53 PUSH1 0xE2 SHL SWAP1 PUSH1 0x4 ADD PUSH2 0x467 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2FC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x320 SWAP2 SWAP1 PUSH2 0x47C JUMP JUMPDEST ISZERO PUSH2 0x398 JUMPI PUSH1 0x40 MLOAD PUSH4 0x35681B53 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xD5A06D4C SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x36A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x392 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x5DF JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x3D5 DUP2 PUSH2 0x39F JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 DUP3 MSTORE DUP4 MLOAD SWAP1 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x20 SWAP1 PUSH1 0x60 DUP5 ADD SWAP1 DUP3 DUP8 ADD DUP5 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x425 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x400 JUMP JUMPDEST POP POP POP DUP4 DUP2 SUB DUP3 DUP6 ADD MSTORE DUP5 MLOAD DUP1 DUP3 MSTORE DUP6 DUP4 ADD SWAP2 DUP4 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x45A JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x43E JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x48E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x49E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x4E4 JUMPI PUSH2 0x4E4 PUSH2 0x4A5 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x506 JUMPI PUSH2 0x506 PUSH2 0x4A5 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x521 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 PUSH2 0x536 PUSH2 0x531 DUP4 PUSH2 0x4EC JUMP JUMPDEST PUSH2 0x4BB JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x555 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x579 JUMPI DUP1 MLOAD PUSH2 0x56C DUP2 PUSH2 0x39F JUMP JUMPDEST DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x559 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x595 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 PUSH2 0x5A5 PUSH2 0x531 DUP4 PUSH2 0x4EC JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x5C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x579 JUMPI DUP1 MLOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x5C8 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x60A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x616 DUP7 DUP4 DUP8 ADD PUSH2 0x510 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x62C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x639 DUP6 DUP3 DUP7 ADD PUSH2 0x584 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x655 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x66C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x678 DUP5 DUP3 DUP6 ADD PUSH2 0x510 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x692 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x678 DUP5 DUP3 DUP6 ADD PUSH2 0x584 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH5 0x8D46CA4AE8 JUMP LT LOG2 0xB4 0xC0 0xAA PUSH27 0xCABFD1976B326E832957FB3629E41A9E3A01B764736F6C63430008 GT STOP CALLER ",
							"sourceMap": "283:1593:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;787:1087;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;1103:106;;-1:-1:-1;;;1103:106:2;;946:35;;;;-1:-1:-1;;;;;1103:40:2;;;;;:106;;-1:-1:-1;;;1161:34:2;1103:106;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1086:781;;;1254:79;;-1:-1:-1;;;1254:79:2;;;;;2304:25:4;;;-1:-1:-1;;;;;1254:40:2;;;;;2277:18:4;;1254:79:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1254:79:2;;;;;;;;;;;;:::i;:::-;1234:99;;-1:-1:-1;1234:99:2;-1:-1:-1;1086:781:2;;;1367:103;;-1:-1:-1;;;1367:103:2;;-1:-1:-1;;;;;1367:40:2;;;;;:103;;-1:-1:-1;;;1425:31:2;1367:103;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1350:517;;;1508:53;;-1:-1:-1;;;1508:53:2;;;;;2304:25:4;;;-1:-1:-1;;;;;1508:44:2;;;;;2277:18:4;;1508:53:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1508:53:2;;;;;;;;;;;;:::i;:::-;1581:46;;-1:-1:-1;;;1581:46:2;;;;;2304:25:4;;;1495:66:2;;-1:-1:-1;;;;;;1581:37:2;;;;;2277:18:4;;1581:46:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1581:46:2;;;;;;;;;;;;:::i;:::-;1575:52;;1350:517;;;1661:106;;-1:-1:-1;;;1661:106:2;;-1:-1:-1;;;;;1661:40:2;;;;;:106;;-1:-1:-1;;;1719:34:2;1661:106;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1644:223;;;1812:44;;-1:-1:-1;;;1812:44:2;;;;;2304:25:4;;;-1:-1:-1;;;;;1812:35:2;;;;;2277:18:4;;1812:44:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1812:44:2;;;;;;;;;;;;:::i;:::-;1792:64;;-1:-1:-1;1792:64:2;-1:-1:-1;1644:223:2;787:1087;;;;;:::o;14:131:4:-;-1:-1:-1;;;;;89:31:4;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:315::-;218:6;226;279:2;267:9;258:7;254:23;250:32;247:52;;;295:1;292;285:12;247:52;334:9;321:23;353:31;378:5;353:31;:::i;:::-;403:5;455:2;440:18;;;;427:32;;-1:-1:-1;;;150:315:4:o;470:1194::-;754:2;766:21;;;836:13;;739:18;;;858:22;;;706:4;;933;;911:2;896:18;;;960:15;;;706:4;1003:195;1017:6;1014:1;1011:13;1003:195;;;1082:13;;-1:-1:-1;;;;;1078:39:4;1066:52;;1138:12;;;;1173:15;;;;1114:1;1032:9;1003:195;;;-1:-1:-1;;;1234:19:4;;;1214:18;;;1207:47;1304:13;;1326:21;;;1402:15;;;;1365:12;;;1437:1;1447:189;1463:8;1458:3;1455:17;1447:189;;;1532:15;;1518:30;;1609:17;;;;1570:14;;;;1491:1;1482:11;1447:189;;;-1:-1:-1;1653:5:4;;470:1194;-1:-1:-1;;;;;;;470:1194:4:o;1669:202::-;-1:-1:-1;;;;;;1831:33:4;;;;1813:52;;1801:2;1786:18;;1669:202::o;1876:277::-;1943:6;1996:2;1984:9;1975:7;1971:23;1967:32;1964:52;;;2012:1;2009;2002:12;1964:52;2044:9;2038:16;2097:5;2090:13;2083:21;2076:5;2073:32;2063:60;;2119:1;2116;2109:12;2063:60;2142:5;1876:277;-1:-1:-1;;;1876:277:4:o;2340:127::-;2401:10;2396:3;2392:20;2389:1;2382:31;2432:4;2429:1;2422:15;2456:4;2453:1;2446:15;2472:275;2543:2;2537:9;2608:2;2589:13;;-1:-1:-1;;2585:27:4;2573:40;;2643:18;2628:34;;2664:22;;;2625:62;2622:88;;;2690:18;;:::i;:::-;2726:2;2719:22;2472:275;;-1:-1:-1;2472:275:4:o;2752:191::-;2820:4;2853:18;2845:6;2842:30;2839:56;;;2875:18;;:::i;:::-;-1:-1:-1;2920:1:4;2916:14;2932:4;2912:25;;2752:191::o;2948:750::-;3021:5;3074:3;3067:4;3059:6;3055:17;3051:27;3041:55;;3092:1;3089;3082:12;3041:55;3121:6;3115:13;3147:4;3171:68;3187:51;3235:2;3187:51;:::i;:::-;3171:68;:::i;:::-;3273:15;;;3359:1;3355:10;;;;3343:23;;3339:32;;;3304:12;;;;3383:15;;;3380:35;;;3411:1;3408;3401:12;3380:35;3447:2;3439:6;3435:15;3459:210;3475:6;3470:3;3467:15;3459:210;;;3548:3;3542:10;3565:31;3590:5;3565:31;:::i;:::-;3609:18;;3647:12;;;;3492;;3459:210;;;-1:-1:-1;3687:5:4;2948:750;-1:-1:-1;;;;;;2948:750:4:o;3703:667::-;3768:5;3821:3;3814:4;3806:6;3802:17;3798:27;3788:55;;3839:1;3836;3829:12;3788:55;3868:6;3862:13;3894:4;3918:68;3934:51;3982:2;3934:51;:::i;3918:68::-;4020:15;;;4106:1;4102:10;;;;4090:23;;4086:32;;;4051:12;;;;4130:15;;;4127:35;;;4158:1;4155;4148:12;4127:35;4194:2;4186:6;4182:15;4206:135;4222:6;4217:3;4214:15;4206:135;;;4288:10;;4276:23;;4319:12;;;;4239;;4206:135;;4375:630;4512:6;4520;4573:2;4561:9;4552:7;4548:23;4544:32;4541:52;;;4589:1;4586;4579:12;4541:52;4622:9;4616:16;4651:18;4692:2;4684:6;4681:14;4678:34;;;4708:1;4705;4698:12;4678:34;4731:80;4803:7;4794:6;4783:9;4779:22;4731:80;:::i;:::-;4721:90;;4857:2;4846:9;4842:18;4836:25;4820:41;;4886:2;4876:8;4873:16;4870:36;;;4902:1;4899;4892:12;4870:36;;4925:74;4991:7;4980:8;4969:9;4965:24;4925:74;:::i;:::-;4915:84;;;4375:630;;;;;:::o;5010:379::-;5113:6;5166:2;5154:9;5145:7;5141:23;5137:32;5134:52;;;5182:1;5179;5172:12;5134:52;5215:9;5209:16;5248:18;5240:6;5237:30;5234:50;;;5280:1;5277;5270:12;5234:50;5303:80;5375:7;5366:6;5355:9;5351:22;5303:80;:::i;:::-;5293:90;5010:379;-1:-1:-1;;;;5010:379:4:o;5394:363::-;5489:6;5542:2;5530:9;5521:7;5517:23;5513:32;5510:52;;;5558:1;5555;5548:12;5510:52;5591:9;5585:16;5624:18;5616:6;5613:30;5610:50;;;5656:1;5653;5646:12;5610:50;5679:72;5743:7;5734:6;5723:9;5719:22;5679:72;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "354200",
								"executionCost": "393",
								"totalCost": "354593"
							},
							"external": {
								"getRoyalty(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 283,
									"end": 1876,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 283,
									"end": 1876,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 283,
									"end": 1876,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 283,
									"end": 1876,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 283,
									"end": 1876,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 283,
									"end": 1876,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 283,
									"end": 1876,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 283,
									"end": 1876,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 283,
									"end": 1876,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 283,
									"end": 1876,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 283,
									"end": 1876,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 283,
									"end": 1876,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 283,
									"end": 1876,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 283,
									"end": 1876,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 283,
									"end": 1876,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 283,
									"end": 1876,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 283,
									"end": 1876,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 283,
									"end": 1876,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 283,
									"end": 1876,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 283,
									"end": 1876,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 283,
									"end": 1876,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220648d46ca4ae85610a2b4c0aa7acabfd1976b326e832957fb3629e41a9e3a01b764736f6c63430008110033",
									".code": [
										{
											"begin": 283,
											"end": 1876,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 283,
											"end": 1876,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 283,
											"end": 1876,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 283,
											"end": 1876,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 283,
											"end": 1876,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 283,
											"end": 1876,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 283,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 283,
											"end": 1876,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 283,
											"end": 1876,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 283,
											"end": 1876,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 283,
											"end": 1876,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 283,
											"end": 1876,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 283,
											"end": 1876,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 283,
											"end": 1876,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 283,
											"end": 1876,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 283,
											"end": 1876,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 283,
											"end": 1876,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 283,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 283,
											"end": 1876,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 283,
											"end": 1876,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 283,
											"end": 1876,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 283,
											"end": 1876,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 283,
											"end": 1876,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 283,
											"end": 1876,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 283,
											"end": 1876,
											"name": "PUSH",
											"source": 2,
											"value": "6E44A72F"
										},
										{
											"begin": 283,
											"end": 1876,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 283,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 283,
											"end": 1876,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 283,
											"end": 1876,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 283,
											"end": 1876,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 283,
											"end": 1876,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 283,
											"end": 1876,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 283,
											"end": 1876,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 787,
											"end": 1874,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 787,
											"end": 1874,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 787,
											"end": 1874,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 787,
											"end": 1874,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 787,
											"end": 1874,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 787,
											"end": 1874,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 787,
											"end": 1874,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 787,
											"end": 1874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 787,
											"end": 1874,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 787,
											"end": 1874,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 787,
											"end": 1874,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 787,
											"end": 1874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 787,
											"end": 1874,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 787,
											"end": 1874,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 787,
											"end": 1874,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 787,
											"end": 1874,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 787,
											"end": 1874,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 787,
											"end": 1874,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 787,
											"end": 1874,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 787,
											"end": 1874,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 787,
											"end": 1874,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 787,
											"end": 1874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 787,
											"end": 1874,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 787,
											"end": 1874,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 787,
											"end": 1874,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 787,
											"end": 1874,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 787,
											"end": 1874,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 787,
											"end": 1874,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 787,
											"end": 1874,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 787,
											"end": 1874,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 787,
											"end": 1874,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 787,
											"end": 1874,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 787,
											"end": 1874,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1103,
											"end": 1209,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1103,
											"end": 1209,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1103,
											"end": 1209,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1103,
											"end": 1209,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 946,
											"end": 981,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 946,
											"end": 981,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 946,
											"end": 981,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 946,
											"end": 981,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1103,
											"end": 1143,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1103,
											"end": 1143,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1103,
											"end": 1143,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1103,
											"end": 1143,
											"name": "PUSH",
											"source": 2,
											"value": "1FFC9A7"
										},
										{
											"begin": 1103,
											"end": 1143,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1103,
											"end": 1209,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1103,
											"end": 1209,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5D9DD7EB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1161,
											"end": 1195,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1103,
											"end": 1209,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1103,
											"end": 1209,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1103,
											"end": 1209,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1103,
											"end": 1209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1103,
											"end": 1209,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1103,
											"end": 1209,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1103,
											"end": 1209,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1103,
											"end": 1209,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1103,
											"end": 1209,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1103,
											"end": 1209,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1103,
											"end": 1209,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1103,
											"end": 1209,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1103,
											"end": 1209,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1103,
											"end": 1209,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1103,
											"end": 1209,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1103,
											"end": 1209,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 1103,
											"end": 1209,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1103,
											"end": 1209,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1103,
											"end": 1209,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1103,
											"end": 1209,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1103,
											"end": 1209,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1103,
											"end": 1209,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1103,
											"end": 1209,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1103,
											"end": 1209,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1103,
											"end": 1209,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1103,
											"end": 1209,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1103,
											"end": 1209,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1103,
											"end": 1209,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1103,
											"end": 1209,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1103,
											"end": 1209,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1103,
											"end": 1209,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1103,
											"end": 1209,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1103,
											"end": 1209,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1103,
											"end": 1209,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1103,
											"end": 1209,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1103,
											"end": 1209,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1103,
											"end": 1209,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1103,
											"end": 1209,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1103,
											"end": 1209,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1103,
											"end": 1209,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1103,
											"end": 1209,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1103,
											"end": 1209,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1103,
											"end": 1209,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1103,
											"end": 1209,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1103,
											"end": 1209,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1103,
											"end": 1209,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1103,
											"end": 1209,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1103,
											"end": 1209,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1103,
											"end": 1209,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1103,
											"end": 1209,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1103,
											"end": 1209,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1103,
											"end": 1209,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1103,
											"end": 1209,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1103,
											"end": 1209,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1103,
											"end": 1209,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1103,
											"end": 1209,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1103,
											"end": 1209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1103,
											"end": 1209,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1103,
											"end": 1209,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1086,
											"end": 1867,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1086,
											"end": 1867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1086,
											"end": 1867,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1254,
											"end": 1333,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1254,
											"end": 1333,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5D9DD7EB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1254,
											"end": 1333,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1254,
											"end": 1333,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1254,
											"end": 1333,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1254,
											"end": 1333,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1254,
											"end": 1333,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2304,
											"end": 2329,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2304,
											"end": 2329,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2304,
											"end": 2329,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1254,
											"end": 1294,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1254,
											"end": 1294,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1254,
											"end": 1294,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1254,
											"end": 1294,
											"name": "PUSH",
											"source": 2,
											"value": "BB3BAFD6"
										},
										{
											"begin": 1254,
											"end": 1294,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2277,
											"end": 2295,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2277,
											"end": 2295,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1254,
											"end": 1333,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1254,
											"end": 1333,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1254,
											"end": 1333,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1254,
											"end": 1333,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1254,
											"end": 1333,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1254,
											"end": 1333,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1254,
											"end": 1333,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1254,
											"end": 1333,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1254,
											"end": 1333,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1254,
											"end": 1333,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 1254,
											"end": 1333,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1254,
											"end": 1333,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1254,
											"end": 1333,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1254,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1254,
											"end": 1333,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1254,
											"end": 1333,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1254,
											"end": 1333,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1254,
											"end": 1333,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1254,
											"end": 1333,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1254,
											"end": 1333,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1254,
											"end": 1333,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1254,
											"end": 1333,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1254,
											"end": 1333,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1254,
											"end": 1333,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1254,
											"end": 1333,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1254,
											"end": 1333,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1254,
											"end": 1333,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1254,
											"end": 1333,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1254,
											"end": 1333,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1254,
											"end": 1333,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1254,
											"end": 1333,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1254,
											"end": 1333,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1254,
											"end": 1333,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1254,
											"end": 1333,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1254,
											"end": 1333,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1254,
											"end": 1333,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1254,
											"end": 1333,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1254,
											"end": 1333,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1254,
											"end": 1333,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1254,
											"end": 1333,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1254,
											"end": 1333,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1254,
											"end": 1333,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1254,
											"end": 1333,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1254,
											"end": 1333,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1254,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1254,
											"end": 1333,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1254,
											"end": 1333,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1254,
											"end": 1333,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1254,
											"end": 1333,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1254,
											"end": 1333,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1254,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1254,
											"end": 1333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1254,
											"end": 1333,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1254,
											"end": 1333,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1234,
											"end": 1333,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1234,
											"end": 1333,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1234,
											"end": 1333,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1086,
											"end": 1867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1086,
											"end": 1867,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1086,
											"end": 1867,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1086,
											"end": 1867,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1470,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1367,
											"end": 1470,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1367,
											"end": 1470,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1470,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1367,
											"end": 1407,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1407,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1407,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1407,
											"name": "PUSH",
											"source": 2,
											"value": "1FFC9A7"
										},
										{
											"begin": 1367,
											"end": 1407,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1470,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1367,
											"end": 1470,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2DDE6561"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1425,
											"end": 1456,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1470,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1367,
											"end": 1470,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1470,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1367,
											"end": 1470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1470,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1367,
											"end": 1470,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1470,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1367,
											"end": 1470,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1367,
											"end": 1470,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1470,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1470,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1470,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1470,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1470,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1470,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1470,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1470,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1470,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1470,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1470,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1367,
											"end": 1470,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1470,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1470,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1367,
											"end": 1470,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1470,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1470,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1470,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1367,
											"end": 1470,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1470,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1367,
											"end": 1470,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1470,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1470,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1470,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1470,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1470,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1367,
											"end": 1470,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1470,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1470,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1367,
											"end": 1470,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1470,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1367,
											"end": 1470,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1470,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1470,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1470,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1470,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1470,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1470,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1367,
											"end": 1470,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1470,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1470,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1470,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1470,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1470,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1367,
											"end": 1470,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1470,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1470,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1367,
											"end": 1470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1470,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1367,
											"end": 1470,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1350,
											"end": 1867,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1350,
											"end": 1867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1350,
											"end": 1867,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1508,
											"end": 1561,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1508,
											"end": 1561,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9C4D9FB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1508,
											"end": 1561,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1508,
											"end": 1561,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1508,
											"end": 1561,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1508,
											"end": 1561,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1508,
											"end": 1561,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2304,
											"end": 2329,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2304,
											"end": 2329,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2304,
											"end": 2329,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1508,
											"end": 1552,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1508,
											"end": 1552,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1508,
											"end": 1552,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1508,
											"end": 1552,
											"name": "PUSH",
											"source": 2,
											"value": "B9C4D9FB"
										},
										{
											"begin": 1508,
											"end": 1552,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2277,
											"end": 2295,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2277,
											"end": 2295,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1508,
											"end": 1561,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1508,
											"end": 1561,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1508,
											"end": 1561,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1508,
											"end": 1561,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1508,
											"end": 1561,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1508,
											"end": 1561,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1508,
											"end": 1561,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1508,
											"end": 1561,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1508,
											"end": 1561,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1508,
											"end": 1561,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 1508,
											"end": 1561,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1508,
											"end": 1561,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1508,
											"end": 1561,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1508,
											"end": 1561,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1508,
											"end": 1561,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1508,
											"end": 1561,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1508,
											"end": 1561,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1508,
											"end": 1561,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1508,
											"end": 1561,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1508,
											"end": 1561,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1508,
											"end": 1561,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1508,
											"end": 1561,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1508,
											"end": 1561,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1508,
											"end": 1561,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1508,
											"end": 1561,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1508,
											"end": 1561,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1508,
											"end": 1561,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1508,
											"end": 1561,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1508,
											"end": 1561,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1508,
											"end": 1561,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1508,
											"end": 1561,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1508,
											"end": 1561,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1508,
											"end": 1561,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1508,
											"end": 1561,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1508,
											"end": 1561,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1508,
											"end": 1561,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1508,
											"end": 1561,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1508,
											"end": 1561,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1508,
											"end": 1561,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1508,
											"end": 1561,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1508,
											"end": 1561,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1508,
											"end": 1561,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1508,
											"end": 1561,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1508,
											"end": 1561,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1508,
											"end": 1561,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1508,
											"end": 1561,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1508,
											"end": 1561,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1508,
											"end": 1561,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1508,
											"end": 1561,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1508,
											"end": 1561,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1508,
											"end": 1561,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1508,
											"end": 1561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1508,
											"end": 1561,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1508,
											"end": 1561,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1581,
											"end": 1627,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1581,
											"end": 1627,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EBD4C7F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1581,
											"end": 1627,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1581,
											"end": 1627,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1581,
											"end": 1627,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1581,
											"end": 1627,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1581,
											"end": 1627,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2304,
											"end": 2329,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2304,
											"end": 2329,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2304,
											"end": 2329,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1495,
											"end": 1561,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 1561,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1581,
											"end": 1618,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1581,
											"end": 1618,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1581,
											"end": 1618,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1581,
											"end": 1618,
											"name": "PUSH",
											"source": 2,
											"value": "EBD4C7F"
										},
										{
											"begin": 1581,
											"end": 1618,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2277,
											"end": 2295,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2277,
											"end": 2295,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1581,
											"end": 1627,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1581,
											"end": 1627,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1581,
											"end": 1627,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1581,
											"end": 1627,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1581,
											"end": 1627,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1581,
											"end": 1627,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1581,
											"end": 1627,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1581,
											"end": 1627,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1581,
											"end": 1627,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1581,
											"end": 1627,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 1581,
											"end": 1627,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1581,
											"end": 1627,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1581,
											"end": 1627,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1581,
											"end": 1627,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1581,
											"end": 1627,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1581,
											"end": 1627,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1581,
											"end": 1627,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1581,
											"end": 1627,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1581,
											"end": 1627,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1581,
											"end": 1627,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1581,
											"end": 1627,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1581,
											"end": 1627,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1581,
											"end": 1627,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1581,
											"end": 1627,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1581,
											"end": 1627,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1581,
											"end": 1627,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1581,
											"end": 1627,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1581,
											"end": 1627,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1581,
											"end": 1627,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1581,
											"end": 1627,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1581,
											"end": 1627,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1581,
											"end": 1627,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1581,
											"end": 1627,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1581,
											"end": 1627,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1581,
											"end": 1627,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1581,
											"end": 1627,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1581,
											"end": 1627,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1581,
											"end": 1627,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1581,
											"end": 1627,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1581,
											"end": 1627,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1581,
											"end": 1627,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1581,
											"end": 1627,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1581,
											"end": 1627,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1581,
											"end": 1627,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1581,
											"end": 1627,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1581,
											"end": 1627,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1581,
											"end": 1627,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1581,
											"end": 1627,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1581,
											"end": 1627,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1581,
											"end": 1627,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1581,
											"end": 1627,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1581,
											"end": 1627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1581,
											"end": 1627,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1581,
											"end": 1627,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1575,
											"end": 1627,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1575,
											"end": 1627,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1350,
											"end": 1867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1350,
											"end": 1867,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1350,
											"end": 1867,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1350,
											"end": 1867,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1767,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1661,
											"end": 1767,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1661,
											"end": 1767,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1767,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1661,
											"end": 1701,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1701,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1701,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1701,
											"name": "PUSH",
											"source": 2,
											"value": "1FFC9A7"
										},
										{
											"begin": 1661,
											"end": 1701,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1767,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1661,
											"end": 1767,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "35681B53"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1719,
											"end": 1753,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1767,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1661,
											"end": 1767,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1767,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1661,
											"end": 1767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1767,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1661,
											"end": 1767,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1767,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1661,
											"end": 1767,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1661,
											"end": 1767,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1767,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1767,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1767,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1767,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1767,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1767,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1767,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1767,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1767,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1767,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1767,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1661,
											"end": 1767,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1767,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1767,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1661,
											"end": 1767,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1767,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1767,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1767,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1661,
											"end": 1767,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1767,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1661,
											"end": 1767,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1767,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1767,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1767,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1767,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1767,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1661,
											"end": 1767,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1767,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1767,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1661,
											"end": 1767,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1767,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1661,
											"end": 1767,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1767,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1767,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1767,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1767,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1767,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1767,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1661,
											"end": 1767,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1767,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1767,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1767,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1767,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1767,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1661,
											"end": 1767,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1767,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1767,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1661,
											"end": 1767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1767,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1661,
											"end": 1767,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1644,
											"end": 1867,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1644,
											"end": 1867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1644,
											"end": 1867,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1812,
											"end": 1856,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1812,
											"end": 1856,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "35681B53"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1812,
											"end": 1856,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1812,
											"end": 1856,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1812,
											"end": 1856,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1812,
											"end": 1856,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1812,
											"end": 1856,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2304,
											"end": 2329,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2304,
											"end": 2329,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2304,
											"end": 2329,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1812,
											"end": 1847,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1812,
											"end": 1847,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1812,
											"end": 1847,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1812,
											"end": 1847,
											"name": "PUSH",
											"source": 2,
											"value": "D5A06D4C"
										},
										{
											"begin": 1812,
											"end": 1847,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2277,
											"end": 2295,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2277,
											"end": 2295,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1812,
											"end": 1856,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1812,
											"end": 1856,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1812,
											"end": 1856,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1812,
											"end": 1856,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1812,
											"end": 1856,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1812,
											"end": 1856,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1812,
											"end": 1856,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1812,
											"end": 1856,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1812,
											"end": 1856,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1812,
											"end": 1856,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 1812,
											"end": 1856,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1812,
											"end": 1856,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1812,
											"end": 1856,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1812,
											"end": 1856,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1812,
											"end": 1856,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1812,
											"end": 1856,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1812,
											"end": 1856,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1812,
											"end": 1856,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1812,
											"end": 1856,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1812,
											"end": 1856,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1812,
											"end": 1856,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1812,
											"end": 1856,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1812,
											"end": 1856,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1812,
											"end": 1856,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1812,
											"end": 1856,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1812,
											"end": 1856,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1812,
											"end": 1856,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1812,
											"end": 1856,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1812,
											"end": 1856,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1812,
											"end": 1856,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1812,
											"end": 1856,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1812,
											"end": 1856,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1812,
											"end": 1856,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1812,
											"end": 1856,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1812,
											"end": 1856,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1812,
											"end": 1856,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1812,
											"end": 1856,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1812,
											"end": 1856,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1812,
											"end": 1856,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1812,
											"end": 1856,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1812,
											"end": 1856,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1812,
											"end": 1856,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1812,
											"end": 1856,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1812,
											"end": 1856,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1812,
											"end": 1856,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1812,
											"end": 1856,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1812,
											"end": 1856,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1812,
											"end": 1856,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1812,
											"end": 1856,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1812,
											"end": 1856,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1812,
											"end": 1856,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1812,
											"end": 1856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1812,
											"end": 1856,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1812,
											"end": 1856,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1792,
											"end": 1856,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1792,
											"end": 1856,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1792,
											"end": 1856,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1644,
											"end": 1867,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1644,
											"end": 1867,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 787,
											"end": 1874,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 787,
											"end": 1874,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 787,
											"end": 1874,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 787,
											"end": 1874,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 787,
											"end": 1874,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 787,
											"end": 1874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14,
											"end": 145,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 14,
											"end": 145,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 89,
											"end": 120,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 89,
											"end": 120,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 79,
											"end": 121,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 79,
											"end": 121,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 69,
											"end": 139,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 69,
											"end": 139,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 135,
											"end": 136,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 133,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 125,
											"end": 137,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 69,
											"end": 139,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 69,
											"end": 139,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14,
											"end": 145,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14,
											"end": 145,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 150,
											"end": 465,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 150,
											"end": 465,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 218,
											"end": 224,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 226,
											"end": 232,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 279,
											"end": 281,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 267,
											"end": 276,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 258,
											"end": 265,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 254,
											"end": 277,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 250,
											"end": 282,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 247,
											"end": 299,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 247,
											"end": 299,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 247,
											"end": 299,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 295,
											"end": 296,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 293,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 285,
											"end": 297,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 247,
											"end": 299,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 247,
											"end": 299,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 321,
											"end": 344,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 353,
											"end": 384,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 378,
											"end": 383,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 353,
											"end": 384,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 353,
											"end": 384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 353,
											"end": 384,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 353,
											"end": 384,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 403,
											"end": 408,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 455,
											"end": 457,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 440,
											"end": 458,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 440,
											"end": 458,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 440,
											"end": 458,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 440,
											"end": 458,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 427,
											"end": 459,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 427,
											"end": 459,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 150,
											"end": 465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 470,
											"end": 1664,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 470,
											"end": 1664,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 754,
											"end": 756,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 766,
											"end": 787,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 766,
											"end": 787,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 766,
											"end": 787,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 836,
											"end": 849,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 836,
											"end": 849,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 739,
											"end": 757,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 739,
											"end": 757,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 739,
											"end": 757,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 858,
											"end": 880,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 858,
											"end": 880,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 858,
											"end": 880,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 706,
											"end": 710,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 706,
											"end": 710,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 933,
											"end": 937,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 933,
											"end": 937,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 911,
											"end": 913,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 896,
											"end": 914,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 896,
											"end": 914,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 896,
											"end": 914,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 960,
											"end": 975,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 960,
											"end": 975,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 960,
											"end": 975,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 706,
											"end": 710,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1003,
											"end": 1198,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 1003,
											"end": 1198,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1017,
											"end": 1023,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1014,
											"end": 1015,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1011,
											"end": 1024,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1003,
											"end": 1198,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1003,
											"end": 1198,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 1003,
											"end": 1198,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1082,
											"end": 1095,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1082,
											"end": 1095,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1078,
											"end": 1117,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1066,
											"end": 1118,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1066,
											"end": 1118,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1138,
											"end": 1150,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1138,
											"end": 1150,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1138,
											"end": 1150,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1138,
											"end": 1150,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1173,
											"end": 1188,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1173,
											"end": 1188,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1173,
											"end": 1188,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1173,
											"end": 1188,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1114,
											"end": 1115,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1032,
											"end": 1041,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1003,
											"end": 1198,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 1003,
											"end": 1198,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1003,
											"end": 1198,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 1003,
											"end": 1198,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1234,
											"end": 1253,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1234,
											"end": 1253,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1234,
											"end": 1253,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1214,
											"end": 1232,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1214,
											"end": 1232,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1214,
											"end": 1232,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1207,
											"end": 1254,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1304,
											"end": 1317,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1304,
											"end": 1317,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1326,
											"end": 1347,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1326,
											"end": 1347,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1326,
											"end": 1347,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1402,
											"end": 1417,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1402,
											"end": 1417,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1402,
											"end": 1417,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1402,
											"end": 1417,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1365,
											"end": 1377,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1365,
											"end": 1377,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1365,
											"end": 1377,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1437,
											"end": 1438,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1447,
											"end": 1636,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 1447,
											"end": 1636,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1463,
											"end": 1471,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1458,
											"end": 1461,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1455,
											"end": 1472,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1447,
											"end": 1636,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1447,
											"end": 1636,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 1447,
											"end": 1636,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1532,
											"end": 1547,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1532,
											"end": 1547,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1518,
											"end": 1548,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1518,
											"end": 1548,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1609,
											"end": 1626,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1609,
											"end": 1626,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1609,
											"end": 1626,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1609,
											"end": 1626,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1584,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1584,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1584,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1584,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1491,
											"end": 1492,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1482,
											"end": 1493,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1447,
											"end": 1636,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 1447,
											"end": 1636,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1447,
											"end": 1636,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 1447,
											"end": 1636,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1653,
											"end": 1658,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1653,
											"end": 1658,
											"name": "SWAP8",
											"source": 4
										},
										{
											"begin": 470,
											"end": 1664,
											"name": "SWAP7",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 470,
											"end": 1664,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1669,
											"end": 1871,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 1669,
											"end": 1871,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1831,
											"end": 1864,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1831,
											"end": 1864,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1831,
											"end": 1864,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1831,
											"end": 1864,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1813,
											"end": 1865,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1813,
											"end": 1865,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 1803,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1786,
											"end": 1804,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1786,
											"end": 1804,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1669,
											"end": 1871,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1876,
											"end": 2153,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 1876,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1943,
											"end": 1949,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1996,
											"end": 1998,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1984,
											"end": 1993,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 1982,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1971,
											"end": 1994,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1967,
											"end": 1999,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 1964,
											"end": 2016,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1964,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 1964,
											"end": 2016,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2012,
											"end": 2013,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2009,
											"end": 2010,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2002,
											"end": 2014,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1964,
											"end": 2016,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 1964,
											"end": 2016,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2044,
											"end": 2053,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2038,
											"end": 2054,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2097,
											"end": 2102,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2090,
											"end": 2103,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2083,
											"end": 2104,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2076,
											"end": 2081,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2073,
											"end": 2105,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2063,
											"end": 2123,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 2063,
											"end": 2123,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2119,
											"end": 2120,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2116,
											"end": 2117,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2109,
											"end": 2121,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2063,
											"end": 2123,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 2063,
											"end": 2123,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1876,
											"end": 2153,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1876,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2340,
											"end": 2467,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 2340,
											"end": 2467,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2401,
											"end": 2411,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B71"
										},
										{
											"begin": 2396,
											"end": 2399,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 2392,
											"end": 2412,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 2389,
											"end": 2390,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2382,
											"end": 2413,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2432,
											"end": 2436,
											"name": "PUSH",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 2429,
											"end": 2430,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2422,
											"end": 2437,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2456,
											"end": 2460,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2453,
											"end": 2454,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2446,
											"end": 2461,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2472,
											"end": 2747,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 2472,
											"end": 2747,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2543,
											"end": 2545,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2537,
											"end": 2546,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 2610,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2589,
											"end": 2602,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2589,
											"end": 2602,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2585,
											"end": 2612,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2643,
											"end": 2661,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2628,
											"end": 2662,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2628,
											"end": 2662,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2664,
											"end": 2686,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2664,
											"end": 2686,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2664,
											"end": 2686,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2625,
											"end": 2687,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 2622,
											"end": 2710,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2622,
											"end": 2710,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 2622,
											"end": 2710,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2690,
											"end": 2708,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 2690,
											"end": 2708,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 2690,
											"end": 2708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2690,
											"end": 2708,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 2690,
											"end": 2708,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2726,
											"end": 2728,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2719,
											"end": 2741,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2472,
											"end": 2747,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2472,
											"end": 2747,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2472,
											"end": 2747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2752,
											"end": 2943,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 2752,
											"end": 2943,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2820,
											"end": 2824,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2853,
											"end": 2871,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2845,
											"end": 2851,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2842,
											"end": 2872,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2895,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2895,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 2839,
											"end": 2895,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2875,
											"end": 2893,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 2875,
											"end": 2893,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 2875,
											"end": 2893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2875,
											"end": 2893,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 2875,
											"end": 2893,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2920,
											"end": 2921,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 2916,
											"end": 2930,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 2932,
											"end": 2936,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2912,
											"end": 2937,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2912,
											"end": 2937,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2752,
											"end": 2943,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2948,
											"end": 3698,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 2948,
											"end": 3698,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3021,
											"end": 3026,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3074,
											"end": 3077,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3067,
											"end": 3071,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3059,
											"end": 3065,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3072,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3078,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 3041,
											"end": 3096,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 3041,
											"end": 3096,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3092,
											"end": 3093,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3089,
											"end": 3090,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3082,
											"end": 3094,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3041,
											"end": 3096,
											"name": "tag",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 3041,
											"end": 3096,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3121,
											"end": 3127,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3115,
											"end": 3128,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3147,
											"end": 3151,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3171,
											"end": 3239,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 3187,
											"end": 3238,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 3235,
											"end": 3237,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3187,
											"end": 3238,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 3187,
											"end": 3238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3187,
											"end": 3238,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 3187,
											"end": 3238,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3171,
											"end": 3239,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 3171,
											"end": 3239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3171,
											"end": 3239,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 3171,
											"end": 3239,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3273,
											"end": 3288,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3273,
											"end": 3288,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3273,
											"end": 3288,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3360,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 3355,
											"end": 3365,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3355,
											"end": 3365,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3355,
											"end": 3365,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3355,
											"end": 3365,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 3343,
											"end": 3366,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3343,
											"end": 3366,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3339,
											"end": 3371,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3339,
											"end": 3371,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3339,
											"end": 3371,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3304,
											"end": 3316,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3304,
											"end": 3316,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3304,
											"end": 3316,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3304,
											"end": 3316,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3398,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3398,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3398,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 3380,
											"end": 3415,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3380,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 3380,
											"end": 3415,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3412,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3408,
											"end": 3409,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3401,
											"end": 3413,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3380,
											"end": 3415,
											"name": "tag",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 3380,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3447,
											"end": 3449,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3439,
											"end": 3445,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3435,
											"end": 3450,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3459,
											"end": 3669,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 3459,
											"end": 3669,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3475,
											"end": 3481,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3470,
											"end": 3473,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3467,
											"end": 3482,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3459,
											"end": 3669,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3459,
											"end": 3669,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 3459,
											"end": 3669,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3548,
											"end": 3551,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3542,
											"end": 3552,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3565,
											"end": 3596,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 3590,
											"end": 3595,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3565,
											"end": 3596,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 3565,
											"end": 3596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3565,
											"end": 3596,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 3565,
											"end": 3596,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3609,
											"end": 3627,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3609,
											"end": 3627,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3647,
											"end": 3659,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3647,
											"end": 3659,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3647,
											"end": 3659,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3647,
											"end": 3659,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3492,
											"end": 3504,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3492,
											"end": 3504,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3459,
											"end": 3669,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 3459,
											"end": 3669,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3459,
											"end": 3669,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 3459,
											"end": 3669,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3687,
											"end": 3692,
											"name": "SWAP7",
											"source": 4
										},
										{
											"begin": 2948,
											"end": 3698,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2948,
											"end": 3698,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3703,
											"end": 4370,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 3703,
											"end": 4370,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3768,
											"end": 3773,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3821,
											"end": 3824,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3814,
											"end": 3818,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3806,
											"end": 3812,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3802,
											"end": 3819,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3798,
											"end": 3825,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 3788,
											"end": 3843,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 3788,
											"end": 3843,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3839,
											"end": 3840,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3836,
											"end": 3837,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3829,
											"end": 3841,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3788,
											"end": 3843,
											"name": "tag",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 3788,
											"end": 3843,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3868,
											"end": 3874,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3862,
											"end": 3875,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3894,
											"end": 3898,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3918,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 3934,
											"end": 3985,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 3982,
											"end": 3984,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3934,
											"end": 3985,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 3934,
											"end": 3985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3918,
											"end": 3986,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 3918,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4020,
											"end": 4035,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4020,
											"end": 4035,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4020,
											"end": 4035,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4107,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 4102,
											"end": 4112,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4102,
											"end": 4112,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4102,
											"end": 4112,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4102,
											"end": 4112,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 4090,
											"end": 4113,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4090,
											"end": 4113,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4086,
											"end": 4118,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4086,
											"end": 4118,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4086,
											"end": 4118,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4051,
											"end": 4063,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4051,
											"end": 4063,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4051,
											"end": 4063,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4051,
											"end": 4063,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4130,
											"end": 4145,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4130,
											"end": 4145,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4130,
											"end": 4145,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 4127,
											"end": 4162,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4127,
											"end": 4162,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 4127,
											"end": 4162,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4158,
											"end": 4159,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4155,
											"end": 4156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4148,
											"end": 4160,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4127,
											"end": 4162,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 4127,
											"end": 4162,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4194,
											"end": 4196,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4186,
											"end": 4192,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4182,
											"end": 4197,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4206,
											"end": 4341,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 4206,
											"end": 4341,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4222,
											"end": 4228,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4217,
											"end": 4220,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4214,
											"end": 4229,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4206,
											"end": 4341,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4206,
											"end": 4341,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 4206,
											"end": 4341,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4288,
											"end": 4298,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4288,
											"end": 4298,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4276,
											"end": 4299,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4276,
											"end": 4299,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4319,
											"end": 4331,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4319,
											"end": 4331,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4319,
											"end": 4331,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4319,
											"end": 4331,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4239,
											"end": 4251,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4239,
											"end": 4251,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4206,
											"end": 4341,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 4206,
											"end": 4341,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4375,
											"end": 5005,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 4375,
											"end": 5005,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4512,
											"end": 4518,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4520,
											"end": 4526,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4573,
											"end": 4575,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4561,
											"end": 4570,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4552,
											"end": 4559,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4548,
											"end": 4571,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4544,
											"end": 4576,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 4541,
											"end": 4593,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4541,
											"end": 4593,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 4541,
											"end": 4593,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4589,
											"end": 4590,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4586,
											"end": 4587,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4579,
											"end": 4591,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4541,
											"end": 4593,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 4541,
											"end": 4593,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4622,
											"end": 4631,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4616,
											"end": 4632,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4651,
											"end": 4669,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4692,
											"end": 4694,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4684,
											"end": 4690,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4681,
											"end": 4695,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 4678,
											"end": 4712,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4678,
											"end": 4712,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 4678,
											"end": 4712,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4709,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4705,
											"end": 4706,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4698,
											"end": 4710,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4678,
											"end": 4712,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 4678,
											"end": 4712,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4731,
											"end": 4811,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 4803,
											"end": 4810,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4794,
											"end": 4800,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4783,
											"end": 4792,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 4779,
											"end": 4801,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4731,
											"end": 4811,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 4731,
											"end": 4811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4731,
											"end": 4811,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 4731,
											"end": 4811,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4721,
											"end": 4811,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4721,
											"end": 4811,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4857,
											"end": 4859,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4846,
											"end": 4855,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4842,
											"end": 4860,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4836,
											"end": 4861,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4820,
											"end": 4861,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4820,
											"end": 4861,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4886,
											"end": 4888,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4876,
											"end": 4884,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4873,
											"end": 4889,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 4870,
											"end": 4906,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4870,
											"end": 4906,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 4870,
											"end": 4906,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4902,
											"end": 4903,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4899,
											"end": 4900,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4892,
											"end": 4904,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4870,
											"end": 4906,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 4870,
											"end": 4906,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4870,
											"end": 4906,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4925,
											"end": 4999,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 4991,
											"end": 4998,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4980,
											"end": 4988,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4969,
											"end": 4978,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4965,
											"end": 4989,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4925,
											"end": 4999,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 4925,
											"end": 4999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4925,
											"end": 4999,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 4925,
											"end": 4999,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4915,
											"end": 4999,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4915,
											"end": 4999,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4915,
											"end": 4999,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4375,
											"end": 5005,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4375,
											"end": 5005,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4375,
											"end": 5005,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4375,
											"end": 5005,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4375,
											"end": 5005,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4375,
											"end": 5005,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5010,
											"end": 5389,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 5010,
											"end": 5389,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5113,
											"end": 5119,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5166,
											"end": 5168,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5154,
											"end": 5163,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5145,
											"end": 5152,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5141,
											"end": 5164,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5137,
											"end": 5169,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 5134,
											"end": 5186,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5134,
											"end": 5186,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 5134,
											"end": 5186,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5182,
											"end": 5183,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5179,
											"end": 5180,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5172,
											"end": 5184,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5134,
											"end": 5186,
											"name": "tag",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 5134,
											"end": 5186,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5215,
											"end": 5224,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5209,
											"end": 5225,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5248,
											"end": 5266,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5240,
											"end": 5246,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5237,
											"end": 5267,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 5234,
											"end": 5284,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5234,
											"end": 5284,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 5234,
											"end": 5284,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5280,
											"end": 5281,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5277,
											"end": 5278,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5270,
											"end": 5282,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5234,
											"end": 5284,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 5234,
											"end": 5284,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5303,
											"end": 5383,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 5375,
											"end": 5382,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5366,
											"end": 5372,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5355,
											"end": 5364,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5351,
											"end": 5373,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5303,
											"end": 5383,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 5303,
											"end": 5383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5303,
											"end": 5383,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 5303,
											"end": 5383,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5293,
											"end": 5383,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 5010,
											"end": 5389,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5010,
											"end": 5389,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5394,
											"end": 5757,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 5394,
											"end": 5757,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5489,
											"end": 5495,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5542,
											"end": 5544,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5530,
											"end": 5539,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5521,
											"end": 5528,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5540,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5513,
											"end": 5545,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 5510,
											"end": 5562,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5510,
											"end": 5562,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 5510,
											"end": 5562,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5558,
											"end": 5559,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5555,
											"end": 5556,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5548,
											"end": 5560,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5510,
											"end": 5562,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 5510,
											"end": 5562,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5591,
											"end": 5600,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5585,
											"end": 5601,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5624,
											"end": 5642,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5616,
											"end": 5622,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5613,
											"end": 5643,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5660,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5660,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 5610,
											"end": 5660,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5656,
											"end": 5657,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5653,
											"end": 5654,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5646,
											"end": 5658,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5660,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 5610,
											"end": 5660,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5679,
											"end": 5751,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 5743,
											"end": 5750,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5734,
											"end": 5740,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5723,
											"end": 5732,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5719,
											"end": 5741,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5679,
											"end": 5751,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 5679,
											"end": 5751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"contracts/manifold/creator-core/core/ICreatorCore.sol",
								"contracts/mojito/interfaces/IRoyaltyEngine.sol",
								"contracts/mojito/sothebys/RoyaltyEngine.sol",
								"contracts/openzeppelin/utils/introspection/IERC165.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"getRoyalty(address,uint256)": "6e44a72f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getRoyalty\",\"outputs\":[{\"internalType\":\"address payable[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"bps\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getRoyalty(address,uint256)\":{\"params\":{\"tokenContract\":\"The NFT Contract address\",\"tokenId\":\"The NFT tokenId\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getRoyalty(address,uint256)\":{\"notice\":\"Get the Royalty Fee details for the tokenID\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mojito/sothebys/RoyaltyEngine.sol\":\"RoyaltyEngine\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":125},\"remappings\":[]},\"sources\":{\"contracts/manifold/creator-core/core/ICreatorCore.sol\":{\"keccak256\":\"0x61a300259ca1484e05b04ece0acc97b9dbf5fbdd7b3d20a6892d8a1d3052362f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59981fee263486519a6e698f4f8ad5ee8af7c0668aee8bf335d285a06c3b02bb\",\"dweb:/ipfs/QmabGX8ERpimg3K8w5uSbVqdLXMo6fgizMmVyPPXazmJco\"]},\"contracts/mojito/interfaces/IRoyaltyEngine.sol\":{\"keccak256\":\"0x10b0c4526004a6c3572bbc4f60c4256bd99f64ec01deb8e6b9b22e5ae6e034b7\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b4dcd64bf92c6c9823469e0001f40cec8e48de2f8b0346218e4af27b04e039c7\",\"dweb:/ipfs/QmPUDiEYvesRGwK8Kv8uVJEnVd6P8itJCkUr9PKCPGTCq4\"]},\"contracts/mojito/sothebys/RoyaltyEngine.sol\":{\"keccak256\":\"0x6dc56a9a4f45e1e6368cdfbf1ae7b2efc2d30c3d68978f6cd1e0ee3c2a3315e2\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f3152ad063cb9e8722ee8f42daf84940dad0d6fd839d3f4c43696baf48ad863a\",\"dweb:/ipfs/QmeMEMU48vnHpNN4SHusw7zjq55H1H933qPM2DmWB2S3iH\"]},\"contracts/openzeppelin/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x6aa521718bf139b44ce56f194f6aea1d590cacef995b5a84703fb1579fa49be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://100f8d367b5e94eb9cb991914f1de133cf272654c0708faa893bbc17a5b35b93\",\"dweb:/ipfs/QmZeBojmgXq821dL1TJKFb58B1FogM9jL3u7hXQ8hTEBKT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"getRoyalty(address,uint256)": {
								"notice": "Get the Royalty Fee details for the tokenID"
							}
						},
						"version": 1
					}
				}
			},
			"contracts/openzeppelin/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/openzeppelin/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":125},\"remappings\":[]},\"sources\":{\"contracts/openzeppelin/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x6aa521718bf139b44ce56f194f6aea1d590cacef995b5a84703fb1579fa49be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://100f8d367b5e94eb9cb991914f1de133cf272654c0708faa893bbc17a5b35b93\",\"dweb:/ipfs/QmZeBojmgXq821dL1TJKFb58B1FogM9jL3u7hXQ8hTEBKT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/manifold/creator-core/core/ICreatorCore.sol": {
				"ast": {
					"absolutePath": "contracts/manifold/creator-core/core/ICreatorCore.sol",
					"exportedSymbols": {
						"ICreatorCore": [
							277
						],
						"IERC165": [
							410
						]
					},
					"id": 278,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"absolutePath": "contracts/openzeppelin/utils/introspection/IERC165.sol",
							"file": "../../../openzeppelin/utils/introspection/IERC165.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 278,
							"sourceUnit": 411,
							"src": "85:63:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "IERC165",
										"nameLocations": [
											"215:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 410,
										"src": "215:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "215:7:0"
								}
							],
							"canonicalName": "ICreatorCore",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "150:38:0",
								"text": " @dev Core creator interface"
							},
							"fullyImplemented": false,
							"id": 277,
							"linearizedBaseContracts": [
								277,
								410
							],
							"name": "ICreatorCore",
							"nameLocation": "199:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "d8cb8ba4086944eabf43c5535b7712015e4d4c714b24bf812c040ea5b7a3e42a",
									"id": 11,
									"name": "ExtensionRegistered",
									"nameLocation": "235:19:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "extension",
												"nameLocation": "280:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "264:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "264:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "315:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "299:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "299:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "254:73:0"
									},
									"src": "229:99:0"
								},
								{
									"anonymous": false,
									"eventSelector": "d19cf84cf0fec6bec9ddfa29c63adf83a55707c712f32c8285d6180a78901479",
									"id": 17,
									"name": "ExtensionUnregistered",
									"nameLocation": "339:21:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"indexed": true,
												"mutability": "mutable",
												"name": "extension",
												"nameLocation": "386:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "370:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 12,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "370:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 15,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "421:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "405:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 14,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "360:73:0"
									},
									"src": "333:101:0"
								},
								{
									"anonymous": false,
									"eventSelector": "05ac7bc5a606cd92a63365f9fda244499b9add0526b22d99937b6bd88181059c",
									"id": 23,
									"name": "ExtensionBlacklisted",
									"nameLocation": "445:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"indexed": true,
												"mutability": "mutable",
												"name": "extension",
												"nameLocation": "491:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "475:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 21,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "526:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "510:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 20,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "510:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "465:73:0"
									},
									"src": "439:100:0"
								},
								{
									"anonymous": false,
									"eventSelector": "6a835c4fcf7e0d398db3762332fdaa1471814ad39f1e2d6d0b3fdabf8efee3e0",
									"id": 31,
									"name": "MintPermissionsUpdated",
									"nameLocation": "550:22:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 25,
												"indexed": true,
												"mutability": "mutable",
												"name": "extension",
												"nameLocation": "598:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "582:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 24,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "582:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"indexed": true,
												"mutability": "mutable",
												"name": "permissions",
												"nameLocation": "633:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "617:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "617:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 29,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "670:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "654:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "572:110:0"
									},
									"src": "544:139:0"
								},
								{
									"anonymous": false,
									"eventSelector": "abb46fe0761d77584bde75697647804ffd8113abd4d8d06bc664150395eccdee",
									"id": 41,
									"name": "RoyaltiesUpdated",
									"nameLocation": "694:16:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "736:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "720:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 32,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "720:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 36,
												"indexed": false,
												"mutability": "mutable",
												"name": "receivers",
												"nameLocation": "771:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "753:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_payable_$dyn_memory_ptr",
													"typeString": "address payable[]"
												},
												"typeName": {
													"baseType": {
														"id": 34,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "753:15:0",
														"stateMutability": "payable",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"id": 35,
													"nodeType": "ArrayTypeName",
													"src": "753:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_payable_$dyn_storage_ptr",
														"typeString": "address payable[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"indexed": false,
												"mutability": "mutable",
												"name": "basisPoints",
												"nameLocation": "800:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "790:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 37,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "790:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 38,
													"nodeType": "ArrayTypeName",
													"src": "790:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "710:107:0"
									},
									"src": "688:130:0"
								},
								{
									"anonymous": false,
									"eventSelector": "2b6849d5976d799a5b0ca4dfd6b40a3d7afe9ea72c091fa01a958594f9a2659b",
									"id": 49,
									"name": "DefaultRoyaltiesUpdated",
									"nameLocation": "829:23:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"indexed": false,
												"mutability": "mutable",
												"name": "receivers",
												"nameLocation": "880:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "862:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_payable_$dyn_memory_ptr",
													"typeString": "address payable[]"
												},
												"typeName": {
													"baseType": {
														"id": 42,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "862:15:0",
														"stateMutability": "payable",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"id": 43,
													"nodeType": "ArrayTypeName",
													"src": "862:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_payable_$dyn_storage_ptr",
														"typeString": "address payable[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 47,
												"indexed": false,
												"mutability": "mutable",
												"name": "basisPoints",
												"nameLocation": "909:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "899:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 45,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "899:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 46,
													"nodeType": "ArrayTypeName",
													"src": "899:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "852:74:0"
									},
									"src": "823:104:0"
								},
								{
									"anonymous": false,
									"eventSelector": "535a93d2cb000582c0ebeaa9be4890ec6a287f98eb2df00c54c300612fd78d8f",
									"id": 59,
									"name": "ExtensionRoyaltiesUpdated",
									"nameLocation": "938:25:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"indexed": true,
												"mutability": "mutable",
												"name": "extension",
												"nameLocation": "989:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "973:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 50,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "973:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 54,
												"indexed": false,
												"mutability": "mutable",
												"name": "receivers",
												"nameLocation": "1026:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "1008:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_payable_$dyn_memory_ptr",
													"typeString": "address payable[]"
												},
												"typeName": {
													"baseType": {
														"id": 52,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1008:15:0",
														"stateMutability": "payable",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"id": 53,
													"nodeType": "ArrayTypeName",
													"src": "1008:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_payable_$dyn_storage_ptr",
														"typeString": "address payable[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"indexed": false,
												"mutability": "mutable",
												"name": "basisPoints",
												"nameLocation": "1055:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "1045:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 55,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1045:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 56,
													"nodeType": "ArrayTypeName",
													"src": "1045:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "963:109:0"
									},
									"src": "932:141:0"
								},
								{
									"anonymous": false,
									"eventSelector": "072a7592283e2c2d1d56d21517ff6013325e0f55483f4828373ff4d98b0a1a36",
									"id": 65,
									"name": "ExtensionApproveTransferUpdated",
									"nameLocation": "1084:31:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"indexed": true,
												"mutability": "mutable",
												"name": "extension",
												"nameLocation": "1141:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 65,
												"src": "1125:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1125:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"indexed": false,
												"mutability": "mutable",
												"name": "enabled",
												"nameLocation": "1165:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 65,
												"src": "1160:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 62,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1160:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1115:63:0"
									},
									"src": "1078:101:0"
								},
								{
									"documentation": {
										"id": 66,
										"nodeType": "StructuredDocumentation",
										"src": "1185:54:0",
										"text": " @dev gets address of all extensions"
									},
									"functionSelector": "83b7db63",
									"id": 72,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getExtensions",
									"nameLocation": "1253:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1266:2:0"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "1292:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 68,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1292:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 69,
													"nodeType": "ArrayTypeName",
													"src": "1292:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1291:18:0"
									},
									"scope": 277,
									"src": "1244:66:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 73,
										"nodeType": "StructuredDocumentation",
										"src": "1316:231:0",
										"text": " @dev add an extension.  Can only be called by contract owner or admin.\n extension address must point to a contract implementing ICreatorExtension.\n Returns True if newly added, False if already added."
									},
									"functionSelector": "3071a0f9",
									"id": 80,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "registerExtension",
									"nameLocation": "1561:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "extension",
												"nameLocation": "1587:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "1579:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 74,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1579:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "baseURI",
												"nameLocation": "1614:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "1598:23:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 76,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1598:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1578:44:0"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1639:0:0"
									},
									"scope": 277,
									"src": "1552:88:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "1646:231:0",
										"text": " @dev add an extension.  Can only be called by contract owner or admin.\n extension address must point to a contract implementing ICreatorExtension.\n Returns True if newly added, False if already added."
									},
									"functionSelector": "3f0f37f6",
									"id": 90,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "registerExtension",
									"nameLocation": "1891:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "extension",
												"nameLocation": "1926:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "1918:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1918:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "baseURI",
												"nameLocation": "1961:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "1945:23:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 84,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1945:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "baseURIIdentical",
												"nameLocation": "1983:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "1978:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 86,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1978:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1908:97:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2014:0:0"
									},
									"scope": 277,
									"src": "1882:133:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "2021:147:0",
										"text": " @dev add an extension.  Can only be called by contract owner or admin.\n Returns True if removed, False if already removed."
									},
									"functionSelector": "ce8aee9d",
									"id": 96,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "unregisterExtension",
									"nameLocation": "2182:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "extension",
												"nameLocation": "2210:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "2202:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2202:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2201:19:0"
									},
									"returnParameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2229:0:0"
									},
									"scope": 277,
									"src": "2173:57:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 97,
										"nodeType": "StructuredDocumentation",
										"src": "2236:331:0",
										"text": " @dev blacklist an extension.  Can only be called by contract owner or admin.\n This function will destroy all ability to reference the metadata of any tokens created\n by the specified extension. It will also unregister the extension if needed.\n Returns True if removed, False if already removed."
									},
									"functionSelector": "02e7afb7",
									"id": 102,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "blacklistExtension",
									"nameLocation": "2581:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "extension",
												"nameLocation": "2608:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "2600:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 98,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2600:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2599:19:0"
									},
									"returnParameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2627:0:0"
									},
									"scope": 277,
									"src": "2572:56:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 103,
										"nodeType": "StructuredDocumentation",
										"src": "2634:95:0",
										"text": " @dev set the baseTokenURI of an extension.  Can only be called by extension."
									},
									"functionSelector": "3e6134b8",
									"id": 108,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setBaseTokenURIExtension",
									"nameLocation": "2743:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "uri",
												"nameLocation": "2784:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "2768:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 104,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2768:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:21:0"
									},
									"returnParameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2797:0:0"
									},
									"scope": 277,
									"src": "2734:64:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 109,
										"nodeType": "StructuredDocumentation",
										"src": "2804:172:0",
										"text": " @dev set the baseTokenURI of an extension.  Can only be called by extension.\n For tokens with no uri configured, tokenURI will return \"uri+tokenId\""
									},
									"functionSelector": "82dcc0c8",
									"id": 116,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setBaseTokenURIExtension",
									"nameLocation": "2990:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "uri",
												"nameLocation": "3031:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "3015:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 110,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3015:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "identical",
												"nameLocation": "3041:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "3036:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 112,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3036:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3014:37:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3068:0:0"
									},
									"scope": 277,
									"src": "2981:88:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 117,
										"nodeType": "StructuredDocumentation",
										"src": "3075:233:0",
										"text": " @dev set the common prefix of an extension.  Can only be called by extension.\n If configured, and a token has a uri set, tokenURI will return \"prefixURI+tokenURI\"\n Useful if you want to use ipfs/arweave"
									},
									"functionSelector": "66d1e9d0",
									"id": 122,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setTokenURIPrefixExtension",
									"nameLocation": "3322:26:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "prefix",
												"nameLocation": "3365:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 122,
												"src": "3349:22:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 118,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3349:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3348:24:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3381:0:0"
									},
									"scope": 277,
									"src": "3313:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 123,
										"nodeType": "StructuredDocumentation",
										"src": "3388:114:0",
										"text": " @dev set the tokenURI of a token extension.  Can only be called by extension that minted token."
									},
									"functionSelector": "e92a89f6",
									"id": 130,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setTokenURIExtension",
									"nameLocation": "3516:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3545:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "3537:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3537:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "uri",
												"nameLocation": "3570:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "3554:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 126,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3554:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3536:38:0"
									},
									"returnParameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3591:0:0"
									},
									"scope": 277,
									"src": "3507:85:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 131,
										"nodeType": "StructuredDocumentation",
										"src": "3598:134:0",
										"text": " @dev set the tokenURI of a token extension for multiple tokens.  Can only be called by extension that minted token."
									},
									"functionSelector": "61e5bc6b",
									"id": 140,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setTokenURIExtension",
									"nameLocation": "3746:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3793:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "3776:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 132,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3776:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 133,
													"nodeType": "ArrayTypeName",
													"src": "3776:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "uri",
												"nameLocation": "3828:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "3810:21:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_string_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "string[]"
												},
												"typeName": {
													"baseType": {
														"id": 135,
														"name": "string",
														"nodeType": "ElementaryTypeName",
														"src": "3810:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage_ptr",
															"typeString": "string"
														}
													},
													"id": 136,
													"nodeType": "ArrayTypeName",
													"src": "3810:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
														"typeString": "string[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3766:71:0"
									},
									"returnParameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3846:0:0"
									},
									"scope": 277,
									"src": "3737:110:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 141,
										"nodeType": "StructuredDocumentation",
										"src": "3853:187:0",
										"text": " @dev set the baseTokenURI for tokens with no extension.  Can only be called by owner/admin.\n For tokens with no uri configured, tokenURI will return \"uri+tokenId\""
									},
									"functionSelector": "30176e13",
									"id": 146,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setBaseTokenURI",
									"nameLocation": "4054:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "uri",
												"nameLocation": "4086:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "4070:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 142,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4070:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4069:21:0"
									},
									"returnParameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4099:0:0"
									},
									"scope": 277,
									"src": "4045:55:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 147,
										"nodeType": "StructuredDocumentation",
										"src": "4106:248:0",
										"text": " @dev set the common prefix for tokens with no extension.  Can only be called by owner/admin.\n If configured, and a token has a uri set, tokenURI will return \"prefixURI+tokenURI\"\n Useful if you want to use ipfs/arweave"
									},
									"functionSelector": "99e0dd7c",
									"id": 152,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setTokenURIPrefix",
									"nameLocation": "4368:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "prefix",
												"nameLocation": "4402:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "4386:22:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 148,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4386:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4385:24:0"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4418:0:0"
									},
									"scope": 277,
									"src": "4359:60:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 153,
										"nodeType": "StructuredDocumentation",
										"src": "4425:106:0",
										"text": " @dev set the tokenURI of a token with no extension.  Can only be called by owner/admin."
									},
									"functionSelector": "162094c4",
									"id": 160,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setTokenURI",
									"nameLocation": "4545:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4565:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "4557:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4557:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "uri",
												"nameLocation": "4590:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "4574:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 156,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4574:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4556:38:0"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4603:0:0"
									},
									"scope": 277,
									"src": "4536:68:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 161,
										"nodeType": "StructuredDocumentation",
										"src": "4610:114:0",
										"text": " @dev set the tokenURI of multiple tokens with no extension.  Can only be called by owner/admin."
									},
									"functionSelector": "aafb2d44",
									"id": 170,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setTokenURI",
									"nameLocation": "4738:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "tokenIds",
												"nameLocation": "4767:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "4750:25:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 162,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4750:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 163,
													"nodeType": "ArrayTypeName",
													"src": "4750:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "uris",
												"nameLocation": "4795:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "4777:22:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_string_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "string[]"
												},
												"typeName": {
													"baseType": {
														"id": 165,
														"name": "string",
														"nodeType": "ElementaryTypeName",
														"src": "4777:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage_ptr",
															"typeString": "string"
														}
													},
													"id": 166,
													"nodeType": "ArrayTypeName",
													"src": "4777:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
														"typeString": "string[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4749:51:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4817:0:0"
									},
									"scope": 277,
									"src": "4729:89:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 171,
										"nodeType": "StructuredDocumentation",
										"src": "4824:94:0",
										"text": " @dev set a permissions contract for an extension.  Used to control minting."
									},
									"functionSelector": "f0cdc499",
									"id": 178,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setMintPermissions",
									"nameLocation": "4932:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "extension",
												"nameLocation": "4959:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "4951:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4951:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "permissions",
												"nameLocation": "4978:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "4970:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4970:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4950:40:0"
									},
									"returnParameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5007:0:0"
									},
									"scope": 277,
									"src": "4923:85:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "5014:158:0",
										"text": " @dev Configure so transfers of tokens created by the caller (must be extension) gets approval\n from the extension before transferring"
									},
									"functionSelector": "ac0c8cfa",
									"id": 184,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApproveTransferExtension",
									"nameLocation": "5186:27:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "enabled",
												"nameLocation": "5219:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "5214:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 180,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5214:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5213:14:0"
									},
									"returnParameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5236:0:0"
									},
									"scope": 277,
									"src": "5177:60:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 185,
										"nodeType": "StructuredDocumentation",
										"src": "5243:58:0",
										"text": " @dev get the extension of a given token"
									},
									"functionSelector": "239be317",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenExtension",
									"nameLocation": "5315:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5338:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "5330:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5330:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5329:17:0"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "5370:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 189,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5370:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5369:9:0"
									},
									"scope": 277,
									"src": "5306:73:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "5385:45:0",
										"text": " @dev Set default royalties"
									},
									"functionSelector": "332dd1ae",
									"id": 202,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setRoyalties",
									"nameLocation": "5444:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "receivers",
												"nameLocation": "5493:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "5466:36:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_payable_$dyn_calldata_ptr",
													"typeString": "address payable[]"
												},
												"typeName": {
													"baseType": {
														"id": 194,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "5466:15:0",
														"stateMutability": "payable",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"id": 195,
													"nodeType": "ArrayTypeName",
													"src": "5466:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_payable_$dyn_storage_ptr",
														"typeString": "address payable[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "basisPoints",
												"nameLocation": "5531:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "5512:30:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 197,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5512:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 198,
													"nodeType": "ArrayTypeName",
													"src": "5512:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5456:92:0"
									},
									"returnParameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5557:0:0"
									},
									"scope": 277,
									"src": "5435:123:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 203,
										"nodeType": "StructuredDocumentation",
										"src": "5564:48:0",
										"text": " @dev Set royalties of a token"
									},
									"functionSelector": "20e4afe2",
									"id": 214,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setRoyalties",
									"nameLocation": "5626:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5656:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "5648:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5648:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "receivers",
												"nameLocation": "5700:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "5673:36:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_payable_$dyn_calldata_ptr",
													"typeString": "address payable[]"
												},
												"typeName": {
													"baseType": {
														"id": 206,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "5673:15:0",
														"stateMutability": "payable",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"id": 207,
													"nodeType": "ArrayTypeName",
													"src": "5673:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_payable_$dyn_storage_ptr",
														"typeString": "address payable[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "basisPoints",
												"nameLocation": "5738:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "5719:30:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 209,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5719:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 210,
													"nodeType": "ArrayTypeName",
													"src": "5719:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5638:117:0"
									},
									"returnParameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5764:0:0"
									},
									"scope": 277,
									"src": "5617:148:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "5771:53:0",
										"text": " @dev Set royalties of an extension"
									},
									"functionSelector": "b0fe87c9",
									"id": 226,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setRoyaltiesExtension",
									"nameLocation": "5838:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "extension",
												"nameLocation": "5877:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "5869:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5869:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "receivers",
												"nameLocation": "5923:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "5896:36:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_payable_$dyn_calldata_ptr",
													"typeString": "address payable[]"
												},
												"typeName": {
													"baseType": {
														"id": 218,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "5896:15:0",
														"stateMutability": "payable",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"id": 219,
													"nodeType": "ArrayTypeName",
													"src": "5896:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_payable_$dyn_storage_ptr",
														"typeString": "address payable[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "basisPoints",
												"nameLocation": "5961:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "5942:30:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 221,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5942:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 222,
													"nodeType": "ArrayTypeName",
													"src": "5942:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5859:119:0"
									},
									"returnParameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5987:0:0"
									},
									"scope": 277,
									"src": "5829:159:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "5994:92:0",
										"text": " @dev Get royalites of a token.  Returns list of receivers and basisPoints"
									},
									"functionSelector": "bb3bafd6",
									"id": 238,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoyalties",
									"nameLocation": "6100:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6121:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "6113:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 228,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6113:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6112:17:0"
									},
									"returnParameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "6177:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_payable_$dyn_memory_ptr",
													"typeString": "address payable[]"
												},
												"typeName": {
													"baseType": {
														"id": 231,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "6177:15:0",
														"stateMutability": "payable",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"id": 232,
													"nodeType": "ArrayTypeName",
													"src": "6177:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_payable_$dyn_storage_ptr",
														"typeString": "address payable[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "6203:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 234,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6203:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 235,
													"nodeType": "ArrayTypeName",
													"src": "6203:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6176:44:0"
									},
									"scope": 277,
									"src": "6091:130:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b9c4d9fb",
									"id": 246,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getFeeRecipients",
									"nameLocation": "6287:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6312:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "6304:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6304:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6303:17:0"
									},
									"returnParameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "6368:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_payable_$dyn_memory_ptr",
													"typeString": "address payable[]"
												},
												"typeName": {
													"baseType": {
														"id": 242,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "6368:15:0",
														"stateMutability": "payable",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"id": 243,
													"nodeType": "ArrayTypeName",
													"src": "6368:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_payable_$dyn_storage_ptr",
														"typeString": "address payable[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6367:26:0"
									},
									"scope": 277,
									"src": "6278:116:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0ebd4c7f",
									"id": 254,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getFeeBps",
									"nameLocation": "6409:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6427:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "6419:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 247,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6419:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6418:17:0"
									},
									"returnParameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "6483:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 250,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6483:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 251,
													"nodeType": "ArrayTypeName",
													"src": "6483:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6482:18:0"
									},
									"scope": 277,
									"src": "6400:101:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d5a06d4c",
									"id": 265,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getFees",
									"nameLocation": "6516:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6532:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "6524:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6524:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6523:17:0"
									},
									"returnParameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "6588:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_payable_$dyn_memory_ptr",
													"typeString": "address payable[]"
												},
												"typeName": {
													"baseType": {
														"id": 258,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "6588:15:0",
														"stateMutability": "payable",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"id": 259,
													"nodeType": "ArrayTypeName",
													"src": "6588:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_payable_$dyn_storage_ptr",
														"typeString": "address payable[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "6614:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 261,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6614:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 262,
													"nodeType": "ArrayTypeName",
													"src": "6614:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6587:44:0"
									},
									"scope": 277,
									"src": "6507:125:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2a55205a",
									"id": 276,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "royaltyInfo",
									"nameLocation": "6647:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6667:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6659:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6659:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6684:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6676:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6676:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6658:32:0"
									},
									"returnParameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6738:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6738:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6748:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 273,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6748:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6737:19:0"
									},
									"scope": 277,
									"src": "6638:119:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 278,
							"src": "189:6570:0",
							"usedErrors": []
						}
					],
					"src": "33:6727:0"
				},
				"id": 0
			},
			"contracts/mojito/interfaces/IRoyaltyEngine.sol": {
				"ast": {
					"absolutePath": "contracts/mojito/interfaces/IRoyaltyEngine.sol",
					"exportedSymbols": {
						"IRoyaltyEngine": [
							295
						]
					},
					"id": 296,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 279,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:1"
						},
						{
							"id": 280,
							"literals": [
								"experimental",
								"ABIEncoderV2"
							],
							"nodeType": "PragmaDirective",
							"src": "61:33:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IRoyaltyEngine",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 281,
								"nodeType": "StructuredDocumentation",
								"src": "96:45:1",
								"text": " @title Interface for RoyaltyEngine"
							},
							"fullyImplemented": false,
							"id": 295,
							"linearizedBaseContracts": [
								295
							],
							"name": "IRoyaltyEngine",
							"nameLocation": "152:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "6e44a72f",
									"id": 294,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoyalty",
									"nameLocation": "183:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "collectionAddress",
												"nameLocation": "202:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "194:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "194:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "229:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "221:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "221:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "193:44:1"
									},
									"returnParameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "recipients",
												"nameLocation": "310:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "285:35:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_payable_$dyn_memory_ptr",
													"typeString": "address payable[]"
												},
												"typeName": {
													"baseType": {
														"id": 287,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "285:15:1",
														"stateMutability": "payable",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"id": 288,
													"nodeType": "ArrayTypeName",
													"src": "285:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_payable_$dyn_storage_ptr",
														"typeString": "address payable[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "bps",
												"nameLocation": "339:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "322:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 290,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "322:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 291,
													"nodeType": "ArrayTypeName",
													"src": "322:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "284:59:1"
									},
									"scope": 295,
									"src": "174:170:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 296,
							"src": "142:205:1",
							"usedErrors": []
						}
					],
					"src": "37:311:1"
				},
				"id": 1
			},
			"contracts/mojito/sothebys/RoyaltyEngine.sol": {
				"ast": {
					"absolutePath": "contracts/mojito/sothebys/RoyaltyEngine.sol",
					"exportedSymbols": {
						"ICreatorCore": [
							277
						],
						"IERC165": [
							410
						],
						"IRoyaltyEngine": [
							295
						],
						"RoyaltyEngine": [
							398
						]
					},
					"id": 399,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 297,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "36:23:2"
						},
						{
							"absolutePath": "contracts/manifold/creator-core/core/ICreatorCore.sol",
							"file": "../../manifold/creator-core/core/ICreatorCore.sol",
							"id": 299,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 399,
							"sourceUnit": 278,
							"src": "61:79:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 298,
										"name": "ICreatorCore",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 277,
										"src": "69:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/openzeppelin/utils/introspection/IERC165.sol",
							"file": "../../openzeppelin/utils/introspection/IERC165.sol",
							"id": 301,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 399,
							"sourceUnit": 411,
							"src": "141:75:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 300,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 410,
										"src": "149:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/mojito/interfaces/IRoyaltyEngine.sol",
							"file": "../interfaces/IRoyaltyEngine.sol",
							"id": 303,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 399,
							"sourceUnit": 296,
							"src": "217:64:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 302,
										"name": "IRoyaltyEngine",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 295,
										"src": "225:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 304,
										"name": "IRoyaltyEngine",
										"nameLocations": [
											"309:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 295,
										"src": "309:14:2"
									},
									"id": 305,
									"nodeType": "InheritanceSpecifier",
									"src": "309:14:2"
								}
							],
							"canonicalName": "RoyaltyEngine",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 398,
							"linearizedBaseContracts": [
								398,
								295
							],
							"name": "RoyaltyEngine",
							"nameLocation": "292:13:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 308,
									"mutability": "constant",
									"name": "ROYALTIES_CREATORCORE_INTERFACE_ID",
									"nameLocation": "355:34:2",
									"nodeType": "VariableDeclaration",
									"scope": 398,
									"src": "331:71:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 306,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "331:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"hexValue": "30786262336261666436",
										"id": 307,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "392:10:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3141251030_by_1",
											"typeString": "int_const 3141251030"
										},
										"value": "0xbb3bafd6"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 311,
									"mutability": "constant",
									"name": "_INTERFACE_ID_ROYALTIES_EIP2981",
									"nameLocation": "432:31:2",
									"nodeType": "VariableDeclaration",
									"scope": 398,
									"src": "408:68:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 309,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "408:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"hexValue": "30783261353532303561",
										"id": 310,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "466:10:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_710221914_by_1",
											"typeString": "int_const 710221914"
										},
										"value": "0x2a55205a"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 314,
									"mutability": "constant",
									"name": "_INTERFACE_ID_ROYALTIES_RARIBLE",
									"nameLocation": "506:31:2",
									"nodeType": "VariableDeclaration",
									"scope": 398,
									"src": "482:68:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 312,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "482:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"hexValue": "30786237373939353834",
										"id": 313,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "540:10:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3078198660_by_1",
											"typeString": "int_const 3078198660"
										},
										"value": "0xb7799584"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 317,
									"mutability": "constant",
									"name": "_INTERFACE_ID_ROYALTIES_FOUNDATION",
									"nameLocation": "580:34:2",
									"nodeType": "VariableDeclaration",
									"scope": 398,
									"src": "556:71:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 315,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "556:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"hexValue": "30786435613036643463",
										"id": 316,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "617:10:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3584060748_by_1",
											"typeString": "int_const 3584060748"
										},
										"value": "0xd5a06d4c"
									},
									"visibility": "private"
								},
								{
									"baseFunctions": [
										294
									],
									"body": {
										"id": 396,
										"nodeType": "Block",
										"src": "1076:798:2",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 336,
															"name": "ROYALTIES_CREATORCORE_INTERFACE_ID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 308,
															"src": "1161:34:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 333,
																	"name": "tokenContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 320,
																	"src": "1111:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 332,
																"name": "IERC165",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 410,
																"src": "1103:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC165_$410_$",
																	"typeString": "type(contract IERC165)"
																}
															},
															"id": 334,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1103:22:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC165_$410",
																"typeString": "contract IERC165"
															}
														},
														"id": 335,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1126:17:2",
														"memberName": "supportsInterface",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 409,
														"src": "1103:40:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_bytes4_$returns$_t_bool_$",
															"typeString": "function (bytes4) view external returns (bool)"
														}
													},
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1103:106:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"arguments": [
															{
																"id": 354,
																"name": "_INTERFACE_ID_ROYALTIES_RARIBLE",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 314,
																"src": "1425:31:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 351,
																		"name": "tokenContract",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 320,
																		"src": "1375:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 350,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 410,
																	"src": "1367:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$410_$",
																		"typeString": "type(contract IERC165)"
																	}
																},
																"id": 352,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1367:22:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC165_$410",
																	"typeString": "contract IERC165"
																}
															},
															"id": 353,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1390:17:2",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 409,
															"src": "1367:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view external returns (bool)"
															}
														},
														"id": 355,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1367:103:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"arguments": [
																{
																	"id": 379,
																	"name": "_INTERFACE_ID_ROYALTIES_FOUNDATION",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 317,
																	"src": "1719:34:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 376,
																			"name": "tokenContract",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 320,
																			"src": "1669:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 375,
																		"name": "IERC165",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 410,
																		"src": "1661:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC165_$410_$",
																			"typeString": "type(contract IERC165)"
																		}
																	},
																	"id": 377,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1661:22:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC165_$410",
																		"typeString": "contract IERC165"
																	}
																},
																"id": 378,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1684:17:2",
																"memberName": "supportsInterface",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 409,
																"src": "1661:40:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_bytes4_$returns$_t_bool_$",
																	"typeString": "function (bytes4) view external returns (bool)"
																}
															},
															"id": 380,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1661:106:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 393,
														"nodeType": "IfStatement",
														"src": "1644:223:2",
														"trueBody": {
															"id": 392,
															"nodeType": "Block",
															"src": "1778:89:2",
															"statements": [
																{
																	"expression": {
																		"id": 390,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"components": [
																				{
																					"id": 381,
																					"name": "recipients",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 327,
																					"src": "1793:10:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_payable_$dyn_memory_ptr",
																						"typeString": "address payable[] memory"
																					}
																				},
																				{
																					"id": 382,
																					"name": "bps",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 330,
																					"src": "1805:3:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				}
																			],
																			"id": 383,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "TupleExpression",
																			"src": "1792:17:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_array$_t_address_payable_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
																				"typeString": "tuple(address payable[] memory,uint256[] memory)"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"arguments": [
																				{
																					"id": 388,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 322,
																					"src": "1848:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"id": 385,
																							"name": "tokenContract",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 320,
																							"src": "1825:13:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 384,
																						"name": "ICreatorCore",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 277,
																						"src": "1812:12:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_ICreatorCore_$277_$",
																							"typeString": "type(contract ICreatorCore)"
																						}
																					},
																					"id": 386,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1812:27:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_ICreatorCore_$277",
																						"typeString": "contract ICreatorCore"
																					}
																				},
																				"id": 387,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1840:7:2",
																				"memberName": "getFees",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 265,
																				"src": "1812:35:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_array$_t_address_payable_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
																					"typeString": "function (uint256) view external returns (address payable[] memory,uint256[] memory)"
																				}
																			},
																			"id": 389,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1812:44:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_array$_t_address_payable_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
																				"typeString": "tuple(address payable[] memory,uint256[] memory)"
																			}
																		},
																		"src": "1792:64:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 391,
																	"nodeType": "ExpressionStatement",
																	"src": "1792:64:2"
																}
															]
														}
													},
													"id": 394,
													"nodeType": "IfStatement",
													"src": "1350:517:2",
													"trueBody": {
														"id": 374,
														"nodeType": "Block",
														"src": "1481:157:2",
														"statements": [
															{
																"expression": {
																	"id": 363,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 356,
																		"name": "recipients",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 327,
																		"src": "1495:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_payable_$dyn_memory_ptr",
																			"typeString": "address payable[] memory"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"arguments": [
																			{
																				"id": 361,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 322,
																				"src": "1553:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"id": 358,
																						"name": "tokenContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 320,
																						"src": "1521:13:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 357,
																					"name": "ICreatorCore",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 277,
																					"src": "1508:12:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_ICreatorCore_$277_$",
																						"typeString": "type(contract ICreatorCore)"
																					}
																				},
																				"id": 359,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1508:27:2",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_ICreatorCore_$277",
																					"typeString": "contract ICreatorCore"
																				}
																			},
																			"id": 360,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1536:16:2",
																			"memberName": "getFeeRecipients",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 246,
																			"src": "1508:44:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_array$_t_address_payable_$dyn_memory_ptr_$",
																				"typeString": "function (uint256) view external returns (address payable[] memory)"
																			}
																		},
																		"id": 362,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1508:53:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_payable_$dyn_memory_ptr",
																			"typeString": "address payable[] memory"
																		}
																	},
																	"src": "1495:66:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_payable_$dyn_memory_ptr",
																		"typeString": "address payable[] memory"
																	}
																},
																"id": 364,
																"nodeType": "ExpressionStatement",
																"src": "1495:66:2"
															},
															{
																"expression": {
																	"id": 372,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 365,
																		"name": "bps",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 330,
																		"src": "1575:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"arguments": [
																			{
																				"id": 370,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 322,
																				"src": "1619:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"id": 367,
																						"name": "tokenContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 320,
																						"src": "1594:13:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 366,
																					"name": "ICreatorCore",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 277,
																					"src": "1581:12:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_ICreatorCore_$277_$",
																						"typeString": "type(contract ICreatorCore)"
																					}
																				},
																				"id": 368,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1581:27:2",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_ICreatorCore_$277",
																					"typeString": "contract ICreatorCore"
																				}
																			},
																			"id": 369,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1609:9:2",
																			"memberName": "getFeeBps",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 254,
																			"src": "1581:37:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																				"typeString": "function (uint256) view external returns (uint256[] memory)"
																			}
																		},
																		"id": 371,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1581:46:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"src": "1575:52:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 373,
																"nodeType": "ExpressionStatement",
																"src": "1575:52:2"
															}
														]
													}
												},
												"id": 395,
												"nodeType": "IfStatement",
												"src": "1086:781:2",
												"trueBody": {
													"id": 349,
													"nodeType": "Block",
													"src": "1220:124:2",
													"statements": [
														{
															"expression": {
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"components": [
																		{
																			"id": 338,
																			"name": "recipients",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 327,
																			"src": "1235:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_payable_$dyn_memory_ptr",
																				"typeString": "address payable[] memory"
																			}
																		},
																		{
																			"id": 339,
																			"name": "bps",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 330,
																			"src": "1247:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		}
																	],
																	"id": 340,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "TupleExpression",
																	"src": "1234:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_array$_t_address_payable_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "tuple(address payable[] memory,uint256[] memory)"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 345,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 322,
																			"src": "1312:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 342,
																					"name": "tokenContract",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 320,
																					"src": "1267:13:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 341,
																				"name": "ICreatorCore",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 277,
																				"src": "1254:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ICreatorCore_$277_$",
																					"typeString": "type(contract ICreatorCore)"
																				}
																			},
																			"id": 343,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1254:27:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_ICreatorCore_$277",
																				"typeString": "contract ICreatorCore"
																			}
																		},
																		"id": 344,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1282:12:2",
																		"memberName": "getRoyalties",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 238,
																		"src": "1254:40:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_array$_t_address_payable_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
																			"typeString": "function (uint256) view external returns (address payable[] memory,uint256[] memory)"
																		}
																	},
																	"id": 346,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1254:79:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_array$_t_address_payable_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "tuple(address payable[] memory,uint256[] memory)"
																	}
																},
																"src": "1234:99:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 348,
															"nodeType": "ExpressionStatement",
															"src": "1234:99:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "634:148:2",
										"text": "@notice Get the Royalty Fee details for the tokenID\n @param tokenContract The NFT Contract address\n @param tokenId The NFT tokenId"
									},
									"functionSelector": "6e44a72f",
									"id": 397,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoyalty",
									"nameLocation": "796:10:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 324,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "907:8:2"
									},
									"parameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "tokenContract",
												"nameLocation": "824:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "816:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 319,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "816:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "855:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "847:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 321,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "847:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "806:62:2"
									},
									"returnParameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "recipients",
												"nameLocation": "971:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "946:35:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_payable_$dyn_memory_ptr",
													"typeString": "address payable[]"
												},
												"typeName": {
													"baseType": {
														"id": 325,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "946:15:2",
														"stateMutability": "payable",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"id": 326,
													"nodeType": "ArrayTypeName",
													"src": "946:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_payable_$dyn_storage_ptr",
														"typeString": "address payable[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "bps",
												"nameLocation": "1012:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "995:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 328,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "995:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 329,
													"nodeType": "ArrayTypeName",
													"src": "995:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "932:139:2"
									},
									"scope": 398,
									"src": "787:1087:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 399,
							"src": "283:1593:2",
							"usedErrors": []
						}
					],
					"src": "36:1840:2"
				},
				"id": 2
			},
			"contracts/openzeppelin/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "contracts/openzeppelin/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							410
						]
					},
					"id": 411,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 400,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 401,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:3",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 410,
							"linearizedBaseContracts": [
								410
							],
							"name": "IERC165",
							"nameLocation": "415:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 402,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:3",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 409,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "801:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 403,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:3"
									},
									"returnParameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "844:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 406,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:3"
									},
									"scope": 410,
									"src": "774:76:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 411,
							"src": "405:447:3",
							"usedErrors": []
						}
					],
					"src": "100:753:3"
				},
				"id": 3
			}
		}
	}
}